{"pageProps":{"post":{"creator":"Marc Reid","title":"Tableau Custom Number Formatting – Part 2","link":"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/","pubDate":"Sun, 28 Aug 2022 08:54:29 +0000","content:encoded":"\n<p>In part 2 of this blog I’ll cover the following topics:</p>\n\n\n\n<ul>\n<li>Formatting thousands, millions and billions</li>\n\n\n\n<li>Adding prefixes and suffixes</li>\n\n\n\n<li>Formatting currency values</li>\n\n\n\n<li>Internationalisation (locale settings)</li>\n\n\n\n<li>Formatting percentages (% vs. “%”)</li>\n\n\n\n<li>Using Unicode characters</li>\n\n\n\n<li>When to use quotes in formatting codes</li>\n</ul>\n\n\n\n<h3 class=\"wp-block-heading\">Positive, Negative and Zero</h3>\n\n\n\n<p>A quick reminder from <a href=\"https://datavis.blog/2022/07/31/tableau-custom-number-formatting/\" target=\"_blank\" rel=\"noreferrer noopener\">part 1</a> of the blog that number codes in Tableau are split into three sections, separated by semicolons:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3184\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/03-pos-neg-zero-2/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png\" data-orig-size=\"604,227\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"03-pos-neg-zero\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png?w=604\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png?w=604\" alt=\"\" class=\"wp-image-3184\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png 604w, https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/03-pos-neg-zero.png?w=300 300w\" sizes=\"(max-width: 604px) 100vw, 604px\" /></figure>\n\n\n\n<p>For simplicity, most of the examples below will omit the negative section as this can easily be replicated by copying the positive number section and adding a “-” sign or parentheses as desired, as described in part 1 of the blog.</p>\n\n\n\n<p>That said, note that if only the positive numbers section is specified, <strong>Tableau will automatically add a negative sign “-” to the display of negative numbers</strong> and will use the positive numbers section to format zero values, for example, the below number formatting code only includes the positive numbers section:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3185\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/00-positive-format-only/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"00-positive-format-only\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png?w=648\" alt=\"\" class=\"wp-image-3185\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/00-positive-format-only.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Also, see <a href=\"https://datavis.blog/2022/07/31/tableau-custom-number-formatting/\" target=\"_blank\" rel=\"noreferrer noopener\">part 1</a> for explanations of the primary placeholder characters (<strong>“0” and “#”</strong>).</p>\n\n\n\n<h3 class=\"wp-block-heading\">Thousands Separators</h3>\n\n\n\n<p>As we start to look at larger numbers we’ll want to show a comma separator after each group of three digits so the numbers are easier to read.</p>\n\n\n\n<p>Let’s use Tableau’s <strong>Number (custom)</strong> dialog to create a template to start with. Here I’ve set the number of <strong>Decimal places</strong> to zero (0), and checked the <strong>Include thousands separators</strong> checkbox.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3186\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/01-show-separator/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png\" data-orig-size=\"543,349\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"01-show-separator\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png?w=543\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png?w=543\" alt=\"\" class=\"wp-image-3186\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png 543w, https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/01-show-separator.png?w=300 300w\" sizes=\"(max-width: 543px) 100vw, 543px\" /></figure>\n\n\n\n<p>Here’s the effect in the view on the <strong>Formatted </strong>numbers. One or more <strong>thousand separators are added</strong> depending on the size of the number and no decimal places are displayed:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3187\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/01-custom-1000s/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"01-custom-1000s\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png?w=648\" alt=\"\" class=\"wp-image-3187\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/01-custom-1000s.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Clicking <strong>Custom </strong>will show the number code that Tableau generated to create these settings:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3188\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/01-custom-show-separator/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png\" data-orig-size=\"450,270\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"01-custom-show-separator\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png?w=450\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png?w=450\" alt=\"\" class=\"wp-image-3188\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png 450w, https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/01-custom-show-separator.png?w=300 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></figure>\n\n\n\n<p>You can see that both the positive and negative sections now include a comma.</p>\n\n\n\n<p>We can actually simplify this code to be <strong>#,0</strong> and still get the same effect. Remember from part 1 that, left of the decimal place, a single placeholder can be used to represent all digits in the underlying data (at least this was the case throughout my testing).</p>\n\n\n\n<p>Here’s the simplified number code and the formatted results, again excluding negative values. The results are the same as the earlier screenshot that used the longer generated code:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3189\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/02-hash-comma-zero/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"02-hash-comma-zero\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png?w=648\" alt=\"\" class=\"wp-image-3189\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/02-hash-comma-zero.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>There needs to be a zero at the end to ensure zero values in the data are shown. If two hashes were used (<strong>#,#</strong>) the zero would not show.</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3190\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/03-hash-comma-hash/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"03-hash-comma-hash\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png?w=648\" alt=\"\" class=\"wp-image-3190\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/03-hash-comma-hash.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<h3 class=\"wp-block-heading\">Thousands, Millions, Billions</h3>\n\n\n\n<p>Let’s now format all the numbers as <strong>thousands</strong>, first with no decimal places. To do this, <strong>add a comma at the end of the code</strong>:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3191\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/04-thousands-0dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"04-thousands-0dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png?w=648\" alt=\"\" class=\"wp-image-3191\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/04-thousands-0dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>The <strong>comma </strong>at the end essentially <strong>divides the raw data value by a thousand</strong>, thereby removing the last three digits. Because we’ve not added decimal places yet, we’re starting to lose information. We’ll add decimals shortly.</p>\n\n\n\n<p>To show the numbers as <strong>millions</strong>, we simply <strong>add another comma</strong>:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3193\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/05-millions-0dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"05-millions-0dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png?w=648\" alt=\"\" class=\"wp-image-3193\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/05-millions-0dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Any number less than a million is now showing as zero. If <strong>#,#</strong> was used at the start of the code (instead of <strong>#,0</strong>) the zeros in the table above would not show and those cells would be blank.</p>\n\n\n\n<p>To show <strong>billions</strong>, we again <strong>add one more comma</strong>:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3194\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/06-billions-0dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"06-billions-0dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png?w=648\" alt=\"\" class=\"wp-image-3194\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/06-billions-0dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<h3 class=\"wp-block-heading\">Two types of comma</h3>\n\n\n\n<p>The above demonstrates the <strong>different uses of a comma</strong> in custom number codes.</p>\n\n\n\n<ul>\n<li>A single comma added between two placeholders (0 or #) will ensure thousands separator(s) are displayed throughout the whole number</li>\n\n\n\n<li>Adding a comma with no placeholder immediately after it scales the whole number by a thousand for each successive comma added</li>\n</ul>\n\n\n\n<h3 class=\"wp-block-heading\">Adding decimal places to large numbers</h3>\n\n\n\n<p>For the previous example to make more sense, we need to add decimal places to show fractions of the large number. Here, I’ve switched back to millions (by removing one of the three commas) and am forcing  the display of two decimal places by adding <strong>.00</strong> at the end:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#,0,,.00</code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3195\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/07-millions-2dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"07-millions-2dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png?w=648\" alt=\"\" class=\"wp-image-3195\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/07-millions-2dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>The third row, above, represents <strong>1.23 Million</strong>.&nbsp;</p>\n\n\n\n<h3 class=\"wp-block-heading\">Adding display units as a suffix</h3>\n\n\n\n<p>To make the above clearer we can add an “M” display unit by literally adding an <strong>M </strong>at the end of the code:</p>\n\n\n\n<pre class=\"wp-block-code\"><code><strong>#,0,,.00M</strong></code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3196\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/08-millions-2dp-m/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"08-millions-2dp-m\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png?w=648\" alt=\"\" class=\"wp-image-3196\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/08-millions-2dp-m.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>If you prefer a space before the M, you can add one in.</p>\n\n\n\n<p>Here, I’ve switched back to <strong>billions</strong>, forced the display of <strong>four decimal places </strong>and added a space before the <strong>B</strong> display unit (not a format I’d recommend but just as an example):</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3197\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/09-billions-4dp-b/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"09-billions-4dp-b\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png?w=648\" alt=\"\" class=\"wp-image-3197\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/09-billions-4dp-b.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<h3 class=\"wp-block-heading\">Adding a prefix</h3>\n\n\n\n<p>If the raw data is currency values, we might want to add a currency symbol to the format code to make that clear. Here I’ve added a <strong>$</strong> symbol in quotes at the start (and switched back to millions with two decimal places).</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3198\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/10-currency-millions/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"10-currency-millions\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png?w=648\" alt=\"\" class=\"wp-image-3198\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/10-currency-millions.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>We can add <strong>other text</strong> to the prefix, such as “<strong>2Q Sales $</strong>”, to specify these are second quarter sales in $.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>\"2Q Sales $\"#,0,,.00 M</code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3199\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/11-2q-sales-prefix/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png\" data-orig-size=\"648,266\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"11-2q-sales-prefix\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png?w=648\" alt=\"\" class=\"wp-image-3199\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/11-2q-sales-prefix.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<h3 class=\"wp-block-heading\">Currency and internationalisation (locale settings)</h3>\n\n\n\n<p>If text is enclosed in quotes “” as above, it will always display as shown in the format code.&nbsp;</p>\n\n\n\n<p>Going back to a simple number code that just adds a thousands separator and a dollar symbol at the start:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3200\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/12-unit-in-quotes/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"12-unit-in-quotes\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png?w=648\" alt=\"\" class=\"wp-image-3200\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/12-unit-in-quotes.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>If we remove the quotes “” and keep the $ symbol, this will now <strong>update the display based on the Workbook Locale settings</strong>. For example, my locale is set to “<strong>English (United Kingdom)</strong>”:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3201\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/12b-locale-english-uk/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png\" data-orig-size=\"622,510\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"12b-locale-english-uk\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png?w=622\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png?w=622\" alt=\"\" class=\"wp-image-3201\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png 622w, https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/12b-locale-english-uk.png?w=300 300w\" sizes=\"(max-width: 622px) 100vw, 622px\" /></figure>\n\n\n\n<p>So the $ currency symbol displays as a <strong>pound symbol £</strong>:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3202\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/13-unit-no-quotes/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"13-unit-no-quotes\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png?w=648\" alt=\"\" class=\"wp-image-3202\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/13-unit-no-quotes.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Changing my locale to “<strong>Spanish (Spain)</strong>” will display a <strong>euro €</strong> currency symbol with the exact same number formatting code:&nbsp;</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3203\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/14-euro-symnol/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"14-euro-symnol\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png?w=648\" alt=\"\" class=\"wp-image-3203\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/14-euro-symnol.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Note also that the <strong>thousands separator</strong> (in the formatted column) has changed from a comma to a period and the <strong>decimal point separator</strong> (in the raw data column) has changed from a period to a comma. That is because this is the standard number format in most European (and many other) countries &#8211; see <a href=\"https://www.dfa.cornell.edu/treasurer/cash-management/processinginternational/intl-currency\" target=\"_blank\" rel=\"noreferrer noopener\">this page</a> for a more complete list.</p>\n\n\n\n<p>This is obviously very important if you are working with currency data and need to display the correct currency symbol regardless of where in the world people may be opening your workbook!</p>\n\n\n\n<p>To be sure the correct currency symbol displays for the currency data you are working with, always enclose it in quotes, like so: <strong>“$”</strong></p>\n\n\n\n<h3 class=\"wp-block-heading\">Formatting percentages (%)</h3>\n\n\n\n<p>Again, let’s start by having Tableau generate a number formatting code for us by selecting <strong>Percentage </strong>and specifying <strong>one decimal place</strong>:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3204\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/15-percentage-1dp-tableau/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png\" data-orig-size=\"450,270\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"15-percentage-1dp-tableau\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png?w=450\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png?w=450\" alt=\"\" class=\"wp-image-3204\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png 450w, https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/15-percentage-1dp-tableau.png?w=300 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></figure>\n\n\n\n<p>Selecting <strong>Custom</strong>, we can then see the code Tableau generated and the effect this has on our <em>new </em>raw data in the view:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3205\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/16-pc-1dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"16-pc-1dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png?w=648\" alt=\"\" class=\"wp-image-3205\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/16-pc-1dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>If you have a mix of percentage values that are <strong>less than and more than 1%</strong>, you can’t turn off the decimal place on those values over 1% only. Removing the decimal place code, will remove decimal places from values less than 1% and they will then round up to 1% (or down to 0%, if the raw values are less than 0.005):</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3206\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/17-0dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"17-0dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png?w=648\" alt=\"\" class=\"wp-image-3206\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/17-0dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>The <strong>% symbol </strong>has two purposes:</p>\n\n\n\n<ul>\n<li>Convert the raw data to a percentage (i.e. shift the decimal place two positions to the right)</li>\n\n\n\n<li>Add a <strong>%</strong> symbol to the display</li>\n</ul>\n\n\n\n<p>If we remove the % symbol and format the display to two decimal places we see this:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3207\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/18-no-pc-sign-2dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"18-no-pc-sign-2dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png?w=648\" alt=\"\" class=\"wp-image-3207\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/18-no-pc-sign-2dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Adding the % symbol performs the two previously mentioned actions:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3209\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/19-pc-2dp/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"19-pc-2dp\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png?w=648\" alt=\"\" class=\"wp-image-3209\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/19-pc-2dp.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>What if our data is <strong>storing percentage values as whole percentages</strong> and not as decimal values representing percentages?&nbsp;</p>\n\n\n\n<p>In that case we need to wrap the percentage symbol in quotes: <strong>“%”</strong> so it becomes a text suffix only and has no effect on the decimal point position.</p>\n\n\n\n<p>This example has raw data containing percentages not in decimal format (i.e. 0.5 is 0.5% and not 50%):</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3210\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/20-pc-suffix/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"20-pc-suffix\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png?w=648\" alt=\"\" class=\"wp-image-3210\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/20-pc-suffix.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>If the quotes are removed from the above example, <strong>erroneous results </strong>will be displayed:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3211\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/21-pc-bad-format/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"21-pc-bad-format\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png?w=648\" alt=\"\" class=\"wp-image-3211\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/21-pc-bad-format.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<h3 class=\"wp-block-heading\">Unicode Symbols</h3>\n\n\n\n<p>For visual encoding, we can add unicode characters to each part of the number format code. The most common use case is adding <strong>up and down arrows</strong> to highlight a positive or negative change/value, for example, in a year-over-year (YoY) comparison:</p>\n\n\n\n<p>Showing a percentage change in values using ▲▼ unicode characters:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3212\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/22-unicode-up-down/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"22-unicode-up-down\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png?w=648\" alt=\"\" class=\"wp-image-3212\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/22-unicode-up-down.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Note, the zero section of the code needs to be added (without a unicode character), otherwise the <strong>positive section will also be used to format zero values</strong> resulting in an upward arrow for zeros:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3215\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/23-zeros-as-positive-1/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"23-zeros-as-positive-1\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png?w=648\" alt=\"\" class=\"wp-image-3215\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/23-zeros-as-positive-1.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Another example, using currencies formatted with a $ symbol and zero decimal places. Zero values are displayed as an em dash <strong>“—”</strong> only:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>\"▲ $\"#,#;\"▼ $\"#,#;\"—\"</code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3216\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/24-unicode-dollar-dash/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"24-unicode-dollar-dash\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png?w=648\" alt=\"\" class=\"wp-image-3216\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/24-unicode-dollar-dash.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Other unicode characters are below, which you can copy and paste as needed:</p>\n\n\n\n<p>▲ ▼&nbsp;</p>\n\n\n\n<p>△ ▽</p>\n\n\n\n<p>↑ ↓&nbsp;&nbsp;</p>\n\n\n\n<p>⇧ ⇩</p>\n\n\n\n<p>⏶⏷</p>\n\n\n\n<p>⭧ ⭨</p>\n\n\n\n<p>⮝ ⮟</p>\n\n\n\n<p>🠉 🠋</p>\n\n\n\n<p>See <a rel=\"noreferrer noopener\" href=\"http://xahlee.info/comp/unicode_arrows.html\" target=\"_blank\">this site</a> for many more Unicode characters.</p>\n\n\n\n<h3 class=\"wp-block-heading\">The use of quotes in custom number codes</h3>\n\n\n\n<p>If you add characters to either the <strong>prefix</strong> or <strong>suffix </strong>boxes in Tableau’s <strong>Number (Custom)</strong> dialog and then switch to the <strong>Custom</strong> view, you will see that Tableau’s generated code wraps both of them in quotes. For example, here I’ve added “<strong>Sales</strong>” as a prefix and “<strong> in Q2</strong>” as a suffix:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3217\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/25-quotes-1/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"25-quotes-1\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png?w=648\" alt=\"\" class=\"wp-image-3217\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/25-quotes-1.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>On the <strong>Custom </strong>view, Tableau has generated the number code below, which includes quotes. I’ve bolded the prefix and suffix in the positive section of the code:&nbsp;</p>\n\n\n\n<pre class=\"wp-block-code\"><code><strong>\"Sales \"</strong>#,##0.00<strong>\" in Q2\"</strong>;-\"Sales \"#,##0.00\" in Q2\"</code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3218\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/26-2/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/26.png\" data-orig-size=\"450,270\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"26\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/26.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/26.png?w=450\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/26.png?w=450\" alt=\"\" class=\"wp-image-3218\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/26.png 450w, https://datavisdotblog.files.wordpress.com/2022/08/26.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/26.png?w=300 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></figure>\n\n\n\n<p>If the quotes are removed from the suffix, “ in Q2”, it is unaffected and displays as before (I’ve removed the negative and zero sections for clarity):</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3219\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/27-suffix-no-quotes/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"27-suffix-no-quotes\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png?w=648\" alt=\"\" class=\"wp-image-3219\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/27-suffix-no-quotes.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>However, if we also remove the quotes around the <em>prefix </em>“Sales “, then the formatting breaks:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3220\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/28-preffix-no-quotes/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"28-preffix-no-quotes\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png?w=648\" alt=\"\" class=\"wp-image-3220\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/28-preffix-no-quotes.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>What’s happening?&nbsp;</p>\n\n\n\n<p>Custom codes can also be used to determine the formatting of dates and times. Various codes (mostly letters) are used to determine which date/time parts to show and in what format. These include letters to represent: days (d), weeks (w), hours (h), seconds (s) and so on. See <a href=\"https://help.tableau.com/current/pro/desktop/en-us/dates_custom_date_formats.htm#supported-date-format-symbols\" target=\"_blank\" rel=\"noreferrer noopener\">here</a> for a detailed list.&nbsp;</p>\n\n\n\n<p>Because “Sales” contains one of these letters, “S”, Tableau interprets the raw data to be of that date/time part and displays it as such. The <strong>whole number code is then interpreted to be formatting dates</strong>, so the “n” and “Q” that are contained within the suffix “in Q2” are then <em>also </em>interpreted as date formatting (as <em>minutes </em>and <em>quarters </em>respectively in this example).&nbsp;</p>\n\n\n\n<p>So <strong>everything </strong>should be in quotes?&nbsp;</p>\n\n\n\n<p>Not necessarily. Various characters can be added without quotes. Indeed, Tableau does this when generating codes that contain <strong>Display Units (K, M, B) or negative values</strong>. The below <strong>Number (Custom)</strong> settings will generate a code that shows negative values surrounded by parentheses and uses the letter “M” to signal to the reader that values are displayed in Millions. (Remember, it’s not the letter M that <em>converts </em>the raw data values to millions, that is done with the use of two commas as seen earlier).</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3221\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/29-tableau-m-neg-code/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"29-tableau-m-neg-code\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png?w=648\" alt=\"\" class=\"wp-image-3221\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/29-tableau-m-neg-code.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>Switching to the <strong>Custom </strong>dialog, we can see that the code Tableau generated <strong>does not have quotes</strong> around the parentheses or the display unit M:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#,##0,,.00<strong>M</strong>;<strong>(</strong>#,##0,,.00<strong>M)</strong></code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3222\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/30-custom-m-neg-code/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png\" data-orig-size=\"450,270\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"30-custom-m-neg-code\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png?w=450\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png?w=450\" alt=\"\" class=\"wp-image-3222\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png 450w, https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/30-custom-m-neg-code.png?w=300 300w\" sizes=\"(max-width: 450px) 100vw, 450px\" /></figure>\n\n\n\n<p>Quotes <em>could </em>be added around each of these characters but it <strong>will have no effect on the formatted output</strong>:&nbsp;</p>\n\n\n\n<pre class=\"wp-block-code\"><code>#,##0,,.00<strong>\"M\"</strong>;<strong>\"(\"</strong>#,##0,,.00<strong>\"M)\"</strong></code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3223\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/31-custom-m-neg-code-quotes/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png\" data-orig-size=\"648,265\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"31-custom-m-neg-code-quotes\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png?w=648\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png?w=648\" alt=\"\" class=\"wp-image-3223\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png 648w, https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/31-custom-m-neg-code-quotes.png?w=300 300w\" sizes=\"(max-width: 648px) 100vw, 648px\" /></figure>\n\n\n\n<p>To summarise, below are recommendations for using quotes based on my testing:&nbsp;</p>\n\n\n\n<ul>\n<li>Always use quotes with text prefixes</li>\n\n\n\n<li>Use quotes on longer suffixes for consistency</li>\n\n\n\n<li>Quotes are optional for display unit suffixes (e.g. K, M or B)</li>\n\n\n\n<li>Quotes are optional for the minus sign and parentheses used to format negative numbers</li>\n\n\n\n<li>For currency data, unless you require a dynamic currency symbol based on the consumer’s locale settings, use quotes around the currency symbol.</li>\n\n\n\n<li>For percentage data stored as decimals (e.g. 0.1 = 10%), don’t use quotes around the percentage symbol: <strong>%</strong></li>\n\n\n\n<li>For percentage data stored as percentage values (e.g. 10 = 10%), use quotes around the percentage symbol: <strong>“%”</strong></li>\n\n\n\n<li>Quotes are optional for Unicode arrows (that I tested), such as: ▲▼</li>\n</ul>\n\n\n\n<h3 class=\"wp-block-heading\">Combination of codes</h3>\n\n\n\n<p>This final example combines many of the codes we’ve looked at so far. Just to be clear, this isn&#8217;t a format I’d recommend for this data but it’s useful for demonstrating the various options:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>\"Profit $\"#,0,,.### M;🠋 (\"$\"#,0,,.000) M;\"⚑ NO SALES ⚑\"</code></pre>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3224\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/xx-custom-number-format/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png\" data-orig-size=\"426,392\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"xx-custom-number-format\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png?w=426\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png?w=426\" alt=\"\" class=\"wp-image-3224\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png 426w, https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/xx-custom-number-format.png?w=300 300w\" sizes=\"(max-width: 426px) 100vw, 426px\" /></figure>\n\n\n\n<p>Let’s break down each part:</p>\n\n\n\n<figure class=\"wp-block-image size-large\"><img data-attachment-id=\"3232\" data-permalink=\"https://datavis.blog/2022/08/28/tableau-custom-number-formatting-part-2/33-explanation-of-number-formatting-codes/\" data-orig-file=\"https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png\" data-orig-size=\"831,773\" data-comments-opened=\"0\" data-image-meta=\"{&quot;aperture&quot;:&quot;0&quot;,&quot;credit&quot;:&quot;&quot;,&quot;camera&quot;:&quot;&quot;,&quot;caption&quot;:&quot;&quot;,&quot;created_timestamp&quot;:&quot;0&quot;,&quot;copyright&quot;:&quot;&quot;,&quot;focal_length&quot;:&quot;0&quot;,&quot;iso&quot;:&quot;0&quot;,&quot;shutter_speed&quot;:&quot;0&quot;,&quot;title&quot;:&quot;&quot;,&quot;orientation&quot;:&quot;0&quot;}\" data-image-title=\"33-explanation-of-number-formatting-codes\" data-image-description=\"\" data-image-caption=\"\" data-medium-file=\"https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png?w=300\" data-large-file=\"https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png?w=736\" src=\"https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png?w=831\" alt=\"\" class=\"wp-image-3232\" srcset=\"https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png 831w, https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png?w=150 150w, https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png?w=300 300w, https://datavisdotblog.files.wordpress.com/2022/08/33-explanation-of-number-formatting-codes.png?w=768 768w\" sizes=\"(max-width: 831px) 100vw, 831px\" /></figure>\n\n\n\n<h3 class=\"wp-block-heading\">Quick Reference Guide</h3>\n\n\n\n<p>I&#8217;ve attached a high-res, A4 image to the below tweet that you can download and use for reference:</p>\n\n\n\n<figure class=\"wp-block-embed is-type-rich is-provider-twitter wp-block-embed-twitter\"><div class=\"wp-block-embed__wrapper\">\n<div class=\"embed-twitter\"><blockquote class=\"twitter-tweet\" data-width=\"550\" data-dnt=\"true\"><p lang=\"en\" dir=\"ltr\">A few resources to help with custom number formatting in <a href=\"https://twitter.com/hashtag/Tableau?src=hash&amp;ref_src=twsrc%5Etfw\">#Tableau</a><br><br>Quick reference guide attached (open in new tab for high-res, A4 version).<br><br><img src=\"https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/270d.png\" alt=\"✍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Blog Part 1: <a href=\"https://t.co/BeMyq1ZuAG\">https://t.co/BeMyq1ZuAG</a><br><img src=\"https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/270d.png\" alt=\"✍\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Blog Part 2: <a href=\"https://t.co/70js4XObZ7\">https://t.co/70js4XObZ7</a><br><img src=\"https://s0.wp.com/wp-content/mu-plugins/wpcom-smileys/twemoji/2/72x72/25b6.png\" alt=\"▶\" class=\"wp-smiley\" style=\"height: 1em; max-height: 1em;\" /> Video tutorial: <a href=\"https://t.co/xQ8kjxgYv2\">https://t.co/xQ8kjxgYv2</a> <a href=\"https://t.co/fq4RHXYHHo\">pic.twitter.com/fq4RHXYHHo</a></p>&mdash; Marc Reid (@marcreid) <a href=\"https://twitter.com/marcreid/status/1570143280704409600?ref_src=twsrc%5Etfw\">September 14, 2022</a></blockquote><script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script></div>\n</div></figure>\n\n\n\n<p>Thanks for making it to the end of this fairly long and detailed post. I hope it was useful.</p>\n\n\n\n<p>The guidance in this post is based on my own test results, so if you find anything that doesn&#8217;t work as expected or you have any other general feedback, please feel free to message me <a rel=\"noreferrer noopener\" href=\"https://twitter.com/marcreid\" target=\"_blank\">on Twitter</a>. </p>\n\n\n\n<p>Thanks!<br>Marc</p>\n\n\n\n<ul class=\"wp-block-social-links has-icon-color has-icon-background-color is-style-default is-content-justification-left is-layout-flex wp-container-10\"><li style=\"color: #ffffff; background-color: #000000; \" class=\"wp-social-link wp-social-link-twitter wp-block-social-link\"><a rel=\" noopener nofollow\" target=\"_blank\" href=\"https://twitter.com/datavisblog\" class=\"wp-block-social-link-anchor\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M22.23,5.924c-0.736,0.326-1.527,0.547-2.357,0.646c0.847-0.508,1.498-1.312,1.804-2.27 c-0.793,0.47-1.671,0.812-2.606,0.996C18.324,4.498,17.257,4,16.077,4c-2.266,0-4.103,1.837-4.103,4.103 c0,0.322,0.036,0.635,0.106,0.935C8.67,8.867,5.647,7.234,3.623,4.751C3.27,5.357,3.067,6.062,3.067,6.814 c0,1.424,0.724,2.679,1.825,3.415c-0.673-0.021-1.305-0.206-1.859-0.513c0,0.017,0,0.034,0,0.052c0,1.988,1.414,3.647,3.292,4.023 c-0.344,0.094-0.707,0.144-1.081,0.144c-0.264,0-0.521-0.026-0.772-0.074c0.522,1.63,2.038,2.816,3.833,2.85 c-1.404,1.1-3.174,1.756-5.096,1.756c-0.331,0-0.658-0.019-0.979-0.057c1.816,1.164,3.973,1.843,6.29,1.843 c7.547,0,11.675-6.252,11.675-11.675c0-0.178-0.004-0.355-0.012-0.531C20.985,7.47,21.68,6.747,22.23,5.924z\"></path></svg><span class=\"wp-block-social-link-label screen-reader-text\">Twitter</span></a></li>\n\n<li style=\"color: #ffffff; background-color: #000000; \" class=\"wp-social-link wp-social-link-linkedin wp-block-social-link\"><a rel=\" noopener nofollow\" target=\"_blank\" href=\"https://www.linkedin.com/in/marcreiduk/\" class=\"wp-block-social-link-anchor\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M19.7,3H4.3C3.582,3,3,3.582,3,4.3v15.4C3,20.418,3.582,21,4.3,21h15.4c0.718,0,1.3-0.582,1.3-1.3V4.3 C21,3.582,20.418,3,19.7,3z M8.339,18.338H5.667v-8.59h2.672V18.338z M7.004,8.574c-0.857,0-1.549-0.694-1.549-1.548 c0-0.855,0.691-1.548,1.549-1.548c0.854,0,1.547,0.694,1.547,1.548C8.551,7.881,7.858,8.574,7.004,8.574z M18.339,18.338h-2.669 v-4.177c0-0.996-0.017-2.278-1.387-2.278c-1.389,0-1.601,1.086-1.601,2.206v4.249h-2.667v-8.59h2.559v1.174h0.037 c0.356-0.675,1.227-1.387,2.526-1.387c2.703,0,3.203,1.779,3.203,4.092V18.338z\"></path></svg><span class=\"wp-block-social-link-label screen-reader-text\">LinkedIn</span></a></li>\n\n<li style=\"color: #ffffff; background-color: #000000; \" class=\"wp-social-link wp-social-link-chain wp-block-social-link\"><a rel=\" noopener nofollow\" target=\"_blank\" href=\"https://public.tableau.com/profile/marc.reid#!/\" class=\"wp-block-social-link-anchor\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M19.647,16.706a1.134,1.134,0,0,0-.343-.833l-2.549-2.549a1.134,1.134,0,0,0-.833-.343,1.168,1.168,0,0,0-.883.392l.233.226q.2.189.264.264a2.922,2.922,0,0,1,.184.233.986.986,0,0,1,.159.312,1.242,1.242,0,0,1,.043.337,1.172,1.172,0,0,1-1.176,1.176,1.237,1.237,0,0,1-.337-.043,1,1,0,0,1-.312-.159,2.76,2.76,0,0,1-.233-.184q-.073-.068-.264-.264l-.226-.233a1.19,1.19,0,0,0-.4.895,1.134,1.134,0,0,0,.343.833L15.837,19.3a1.13,1.13,0,0,0,.833.331,1.18,1.18,0,0,0,.833-.318l1.8-1.789a1.12,1.12,0,0,0,.343-.821Zm-8.615-8.64a1.134,1.134,0,0,0-.343-.833L8.163,4.7a1.134,1.134,0,0,0-.833-.343,1.184,1.184,0,0,0-.833.331L4.7,6.473a1.12,1.12,0,0,0-.343.821,1.134,1.134,0,0,0,.343.833l2.549,2.549a1.13,1.13,0,0,0,.833.331,1.184,1.184,0,0,0,.883-.38L8.728,10.4q-.2-.189-.264-.264A2.922,2.922,0,0,1,8.28,9.9a.986.986,0,0,1-.159-.312,1.242,1.242,0,0,1-.043-.337A1.172,1.172,0,0,1,9.254,8.079a1.237,1.237,0,0,1,.337.043,1,1,0,0,1,.312.159,2.761,2.761,0,0,1,.233.184q.073.068.264.264l.226.233a1.19,1.19,0,0,0,.4-.895ZM22,16.706a3.343,3.343,0,0,1-1.042,2.488l-1.8,1.789a3.536,3.536,0,0,1-4.988-.025l-2.525-2.537a3.384,3.384,0,0,1-1.017-2.488,3.448,3.448,0,0,1,1.078-2.561l-1.078-1.078a3.434,3.434,0,0,1-2.549,1.078,3.4,3.4,0,0,1-2.5-1.029L3.029,9.794A3.4,3.4,0,0,1,2,7.294,3.343,3.343,0,0,1,3.042,4.806l1.8-1.789A3.384,3.384,0,0,1,7.331,2a3.357,3.357,0,0,1,2.5,1.042l2.525,2.537a3.384,3.384,0,0,1,1.017,2.488,3.448,3.448,0,0,1-1.078,2.561l1.078,1.078a3.551,3.551,0,0,1,5.049-.049l2.549,2.549A3.4,3.4,0,0,1,22,16.706Z\"></path></svg><span class=\"wp-block-social-link-label screen-reader-text\">Link</span></a></li>\n\n<li style=\"color: #ffffff; background-color: #000000; \" class=\"wp-social-link wp-social-link-youtube wp-block-social-link\"><a rel=\" noopener nofollow\" target=\"_blank\" href=\"https://www.youtube.com/channel/UC0TRdI_jiy1-YK2a9ZsClcw?sub_confirmation=1\" class=\"wp-block-social-link-anchor\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M21.8,8.001c0,0-0.195-1.378-0.795-1.985c-0.76-0.797-1.613-0.801-2.004-0.847c-2.799-0.202-6.997-0.202-6.997-0.202 h-0.009c0,0-4.198,0-6.997,0.202C4.608,5.216,3.756,5.22,2.995,6.016C2.395,6.623,2.2,8.001,2.2,8.001S2,9.62,2,11.238v1.517 c0,1.618,0.2,3.237,0.2,3.237s0.195,1.378,0.795,1.985c0.761,0.797,1.76,0.771,2.205,0.855c1.6,0.153,6.8,0.201,6.8,0.201 s4.203-0.006,7.001-0.209c0.391-0.047,1.243-0.051,2.004-0.847c0.6-0.607,0.795-1.985,0.795-1.985s0.2-1.618,0.2-3.237v-1.517 C22,9.62,21.8,8.001,21.8,8.001z M9.935,14.594l-0.001-5.62l5.404,2.82L9.935,14.594z\"></path></svg><span class=\"wp-block-social-link-label screen-reader-text\">YouTube</span></a></li></ul>\n\n\n\n<p><strong>Latest YouTube video</strong><br>This video demonstrates combining Cloudinary&#8217;s dynamic image creation service with Tableau&#8217;s new Image Role feature.</p>\n\n\n\n<figure class=\"wp-block-embed is-type-video is-provider-youtube wp-block-embed-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio\"><div class=\"wp-block-embed__wrapper\">\n<div class=\"jetpack-video-wrapper\"><iframe class=\"youtube-player\" width=\"736\" height=\"414\" src=\"https://www.youtube.com/embed/Zwt6eDCA_YM?version=3&#038;rel=1&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;fs=1&#038;hl=en-gb&#038;autohide=2&#038;wmode=transparent\" allowfullscreen=\"true\" style=\"border:0;\" sandbox=\"allow-scripts allow-same-origin allow-popups allow-presentation\"></iframe></div>\n</div></figure>\n","content:encodedSnippet":"In part 2 of this blog I’ll cover the following topics:\nFormatting thousands, millions and billions\nAdding prefixes and suffixes\nFormatting currency values\nInternationalisation (locale settings)\nFormatting percentages (% vs. “%”)\nUsing Unicode characters\nWhen to use quotes in formatting codes\nPositive, Negative and Zero\nA quick reminder from part 1 of the blog that number codes in Tableau are split into three sections, separated by semicolons:\n\n\n\n\nFor simplicity, most of the examples below will omit the negative section as this can easily be replicated by copying the positive number section and adding a “-” sign or parentheses as desired, as described in part 1 of the blog.\nThat said, note that if only the positive numbers section is specified, Tableau will automatically add a negative sign “-” to the display of negative numbers and will use the positive numbers section to format zero values, for example, the below number formatting code only includes the positive numbers section:\n\n\n\n\nAlso, see part 1 for explanations of the primary placeholder characters (“0” and “#”).\nThousands Separators\nAs we start to look at larger numbers we’ll want to show a comma separator after each group of three digits so the numbers are easier to read.\nLet’s use Tableau’s Number (custom) dialog to create a template to start with. Here I’ve set the number of Decimal places to zero (0), and checked the Include thousands separators checkbox.\n\n\n\n\nHere’s the effect in the view on the Formatted numbers. One or more thousand separators are added depending on the size of the number and no decimal places are displayed:\n\n\n\n\nClicking Custom will show the number code that Tableau generated to create these settings:\n\n\n\n\nYou can see that both the positive and negative sections now include a comma.\nWe can actually simplify this code to be #,0 and still get the same effect. Remember from part 1 that, left of the decimal place, a single placeholder can be used to represent all digits in the underlying data (at least this was the case throughout my testing).\nHere’s the simplified number code and the formatted results, again excluding negative values. The results are the same as the earlier screenshot that used the longer generated code:\n\n\n\n\nThere needs to be a zero at the end to ensure zero values in the data are shown. If two hashes were used (#,#) the zero would not show.\n\n\n\n\nThousands, Millions, Billions\nLet’s now format all the numbers as thousands, first with no decimal places. To do this, add a comma at the end of the code:\n\n\n\n\nThe comma at the end essentially divides the raw data value by a thousand, thereby removing the last three digits. Because we’ve not added decimal places yet, we’re starting to lose information. We’ll add decimals shortly.\nTo show the numbers as millions, we simply add another comma:\n\n\n\n\nAny number less than a million is now showing as zero. If #,# was used at the start of the code (instead of #,0) the zeros in the table above would not show and those cells would be blank.\nTo show billions, we again add one more comma:\n\n\n\n\nTwo types of comma\nThe above demonstrates the different uses of a comma in custom number codes.\nA single comma added between two placeholders (0 or #) will ensure thousands separator(s) are displayed throughout the whole number\nAdding a comma with no placeholder immediately after it scales the whole number by a thousand for each successive comma added\nAdding decimal places to large numbers\nFor the previous example to make more sense, we need to add decimal places to show fractions of the large number. Here, I’ve switched back to millions (by removing one of the three commas) and am forcing  the display of two decimal places by adding .00 at the end:\n#,0,,.00\n\n\n\n\nThe third row, above, represents 1.23 Million. \nAdding display units as a suffix\nTo make the above clearer we can add an “M” display unit by literally adding an M at the end of the code:\n#,0,,.00M\n\n\n\n\nIf you prefer a space before the M, you can add one in.\nHere, I’ve switched back to billions, forced the display of four decimal places and added a space before the B display unit (not a format I’d recommend but just as an example):\n\n\n\n\nAdding a prefix\nIf the raw data is currency values, we might want to add a currency symbol to the format code to make that clear. Here I’ve added a $ symbol in quotes at the start (and switched back to millions with two decimal places).\n\n\n\n\nWe can add other text to the prefix, such as “2Q Sales $”, to specify these are second quarter sales in $.\n\"2Q Sales $\"#,0,,.00 M\n\n\n\n\nCurrency and internationalisation (locale settings)\nIf text is enclosed in quotes “” as above, it will always display as shown in the format code. \nGoing back to a simple number code that just adds a thousands separator and a dollar symbol at the start:\n\n\n\n\nIf we remove the quotes “” and keep the $ symbol, this will now update the display based on the Workbook Locale settings. For example, my locale is set to “English (United Kingdom)”:\n\n\n\n\nSo the $ currency symbol displays as a pound symbol £:\n\n\n\n\nChanging my locale to “Spanish (Spain)” will display a euro € currency symbol with the exact same number formatting code: \n\n\n\n\nNote also that the thousands separator (in the formatted column) has changed from a comma to a period and the decimal point separator (in the raw data column) has changed from a period to a comma. That is because this is the standard number format in most European (and many other) countries – see this page for a more complete list.\nThis is obviously very important if you are working with currency data and need to display the correct currency symbol regardless of where in the world people may be opening your workbook!\nTo be sure the correct currency symbol displays for the currency data you are working with, always enclose it in quotes, like so: “$”\nFormatting percentages (%)\nAgain, let’s start by having Tableau generate a number formatting code for us by selecting Percentage and specifying one decimal place:\n\n\n\n\nSelecting Custom, we can then see the code Tableau generated and the effect this has on our new raw data in the view:\n\n\n\n\nIf you have a mix of percentage values that are less than and more than 1%, you can’t turn off the decimal place on those values over 1% only. Removing the decimal place code, will remove decimal places from values less than 1% and they will then round up to 1% (or down to 0%, if the raw values are less than 0.005):\n\n\n\n\nThe % symbol has two purposes:\nConvert the raw data to a percentage (i.e. shift the decimal place two positions to the right)\nAdd a % symbol to the display\nIf we remove the % symbol and format the display to two decimal places we see this:\n\n\n\n\nAdding the % symbol performs the two previously mentioned actions:\n\n\n\n\nWhat if our data is storing percentage values as whole percentages and not as decimal values representing percentages? \nIn that case we need to wrap the percentage symbol in quotes: “%” so it becomes a text suffix only and has no effect on the decimal point position.\nThis example has raw data containing percentages not in decimal format (i.e. 0.5 is 0.5% and not 50%):\n\n\n\n\nIf the quotes are removed from the above example, erroneous results will be displayed:\n\n\n\n\nUnicode Symbols\nFor visual encoding, we can add unicode characters to each part of the number format code. The most common use case is adding up and down arrows to highlight a positive or negative change/value, for example, in a year-over-year (YoY) comparison:\nShowing a percentage change in values using ▲▼ unicode characters:\n\n\n\n\nNote, the zero section of the code needs to be added (without a unicode character), otherwise the positive section will also be used to format zero values resulting in an upward arrow for zeros:\n\n\n\n\nAnother example, using currencies formatted with a $ symbol and zero decimal places. Zero values are displayed as an em dash “—” only:\n\"▲ $\"#,#;\"▼ $\"#,#;\"—\"\n\n\n\n\nOther unicode characters are below, which you can copy and paste as needed:\n▲ ▼ \n△ ▽\n↑ ↓  \n⇧ ⇩\n⏶⏷\n⭧ ⭨\n⮝ ⮟\n🠉 🠋\nSee this site for many more Unicode characters.\nThe use of quotes in custom number codes\nIf you add characters to either the prefix or suffix boxes in Tableau’s Number (Custom) dialog and then switch to the Custom view, you will see that Tableau’s generated code wraps both of them in quotes. For example, here I’ve added “Sales” as a prefix and “ in Q2” as a suffix:\n\n\n\n\nOn the Custom view, Tableau has generated the number code below, which includes quotes. I’ve bolded the prefix and suffix in the positive section of the code: \n\"Sales \"#,##0.00\" in Q2\";-\"Sales \"#,##0.00\" in Q2\"\n\n\n\n\nIf the quotes are removed from the suffix, “ in Q2”, it is unaffected and displays as before (I’ve removed the negative and zero sections for clarity):\n\n\n\n\nHowever, if we also remove the quotes around the prefix “Sales “, then the formatting breaks:\n\n\n\n\nWhat’s happening? \nCustom codes can also be used to determine the formatting of dates and times. Various codes (mostly letters) are used to determine which date/time parts to show and in what format. These include letters to represent: days (d), weeks (w), hours (h), seconds (s) and so on. See here for a detailed list. \nBecause “Sales” contains one of these letters, “S”, Tableau interprets the raw data to be of that date/time part and displays it as such. The whole number code is then interpreted to be formatting dates, so the “n” and “Q” that are contained within the suffix “in Q2” are then also interpreted as date formatting (as minutes and quarters respectively in this example). \nSo everything should be in quotes? \nNot necessarily. Various characters can be added without quotes. Indeed, Tableau does this when generating codes that contain Display Units (K, M, B) or negative values. The below Number (Custom) settings will generate a code that shows negative values surrounded by parentheses and uses the letter “M” to signal to the reader that values are displayed in Millions. (Remember, it’s not the letter M that converts the raw data values to millions, that is done with the use of two commas as seen earlier).\n\n\n\n\nSwitching to the Custom dialog, we can see that the code Tableau generated does not have quotes around the parentheses or the display unit M:\n#,##0,,.00M;(#,##0,,.00M)\n\n\n\n\nQuotes could be added around each of these characters but it will have no effect on the formatted output: \n#,##0,,.00\"M\";\"(\"#,##0,,.00\"M)\"\n\n\n\n\nTo summarise, below are recommendations for using quotes based on my testing: \nAlways use quotes with text prefixes\nUse quotes on longer suffixes for consistency\nQuotes are optional for display unit suffixes (e.g. K, M or B)\nQuotes are optional for the minus sign and parentheses used to format negative numbers\nFor currency data, unless you require a dynamic currency symbol based on the consumer’s locale settings, use quotes around the currency symbol.\nFor percentage data stored as decimals (e.g. 0.1 = 10%), don’t use quotes around the percentage symbol: %\nFor percentage data stored as percentage values (e.g. 10 = 10%), use quotes around the percentage symbol: “%”\nQuotes are optional for Unicode arrows (that I tested), such as: ▲▼\nCombination of codes\nThis final example combines many of the codes we’ve looked at so far. Just to be clear, this isn’t a format I’d recommend for this data but it’s useful for demonstrating the various options:\n\"Profit $\"#,0,,.### M;🠋 (\"$\"#,0,,.000) M;\"⚑ NO SALES ⚑\"\n\n\n\n\nLet’s break down each part:\n\n\n\n\nQuick Reference Guide\nI’ve attached a high-res, A4 image to the below tweet that you can download and use for reference:\n\n\nA few resources to help with custom number formatting in #Tableau\nQuick reference guide attached (open in new tab for high-res, A4 version).\n Blog Part 1: https://t.co/BeMyq1ZuAG\n Blog Part 2: https://t.co/70js4XObZ7\n Video tutorial: https://t.co/xQ8kjxgYv2 pic.twitter.com/fq4RHXYHHo\n— Marc Reid (@marcreid) September 14, 2022\n\n\n\n\n\nThanks for making it to the end of this fairly long and detailed post. I hope it was useful.\nThe guidance in this post is based on my own test results, so if you find anything that doesn’t work as expected or you have any other general feedback, please feel free to message me on Twitter. \nThanks!\nMarc\n\nTwitter\n\nLinkedIn\n\nLink\n\nYouTube\n\n\n\n\nLatest YouTube video\nThis video demonstrates combining Cloudinary’s dynamic image creation service with Tableau’s new Image Role feature.","dc:creator":"Marc Reid","content":"Part 2 of this custom number formatting post covers: large numbers, prefixes &#38; suffixes, currency, localisation and Unicode with many examples.","contentSnippet":"Part 2 of this custom number formatting post covers: large numbers, prefixes & suffixes, currency, localisation and Unicode with many examples.","guid":"http://datavis.blog/?p=3182","categories":["Formatting","Tips","number format"],"isoDate":"2022-08-28T08:54:29.000Z","blogTitle":"Datavis.blog","img":"https://datavisdotblog.files.wordpress.com/2022/02/datavis.blog-heatmap.png?w=32"}},"__N_SSG":true}