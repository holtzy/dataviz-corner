{"pageProps":{"post":{"title":"Re-coloring Illustrator graphics based on JSON data files","link":"https://vis4.net/blog/2017/03/re-coloring-illustrator-graphics-based-on-data-files/","pubDate":"2017-03-02T09:31:18.000Z","content":"<p>When working on <a href=\"https://vis4.net/blog/posts/to-cartogram-or-not-to-cartogram-the-brexit/\">choropleth maps</a> or charts in Illustrator, sometimes the (final) data is not yet available by the time you’re designing the graphic. The typical work-around is to re-import the updated part of the graphic and align it with the rest of the artwork. But this is tedious work, especially if you’re dealing with multiple maps. To address this problem I wrote an <a href=\"https://github.com/newsdev/ai-scripts/blob/master/colorize%20artwork.jsx\" target=\"_blank\" rel=\"noopener\">Illustrator script</a> that can re-color the artwork based on a JSON file. This blog post will walk you through how to use the script.</p><h2 id=\"step-1-installing-the-colorizer-script\"><a class=\"anchor\" href=\"#step-1-installing-the-colorizer-script\"><span class=\"header-anchor\">#</span></a> Step 1: Installing the colorizer script</h2><p>To install the script you will need to clone our <a href=\"https://github.com/newsdev/ai-scripts\" target=\"_blank\" rel=\"noopener\">ai-scripts</a> repository inside your Illustrator script folder. If you’re on macOS or OSX this would look something like this:</p><pre><code>❯ cd /Applications/Adobe\\ Illustrator\\ CC\\ 2017❯ cd Presets.localized/en_US/Scripts❯ git clone git@github.com:newsdev/ai-scripts.git</code></pre><p>Depending on what Illustrator version you’re using you might need to adjust the path in the first line. Alternative to cloning the repo, you can also just download the ai-scripts <a href=\"https://github.com/newsdev/ai-scripts/archive/master.zip\" target=\"_blank\" rel=\"noopener\">ZIP archive</a> and unpack it into the Illustrator Scripts folder. <img src=\"/blog/images/old/1f044cc830f3d20d07c58a760eb72ba5.png\" alt=\"\"> After restarting Illustrator you should see the new scripts in the <em>File &gt; Scripts</em> menu: <img src=\"/blog/images/old/c0033e9528c888f1fb92bb8b1e216a47.png\" alt=\"\"></p><h2 id=\"step-2-setting-up-the-illustrator-document\"><a class=\"anchor\" href=\"#step-2-setting-up-the-illustrator-document\"><span class=\"header-anchor\">#</span></a> Step 2: Setting up the Illustrator document</h2><p>In this tutorial we’re going to create a map of U.S. states. Let’s download the <strong><a href=\"https://gist.githubusercontent.com/gka/9864daba96d1111634d319ffe61137ee/raw/9ee5e357a6f97ffbf27b311d47447368b82dffdf/us-states.svg\" target=\"_blank\" rel=\"noopener\">us-states.svg</a></strong> file, which I created by throwing a US census <a href=\"https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html\" target=\"_blank\" rel=\"noopener\">shapefile</a> into the <a href=\"http://mapshaper.org/\" target=\"_blank\" rel=\"noopener\">mapshaper</a> web interface. The important thing about this SVG file is that every state path has the two-letter state postal code set as id attribute. And thankfully, Illustrator is preserving these ids as layer names during SVG import. <img src=\"/blog/images/old/1c57d21f9d116ded9e6e8f6193d3f352.png\" alt=\"\"></p><h2 id=\"step-3-setting-up-the-data-file\"><a class=\"anchor\" href=\"#step-3-setting-up-the-data-file\"><span class=\"header-anchor\">#</span></a> Step 3: Setting up the data file</h2><p>Now we’re going to need to create the JSON file needed by the colorizer-script. You can use whatever script or data source you want to create this file, as long as the final output looks similar to this:</p><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[&#123;</span><br><span class=\"line\">    <span class=\"attr\">\"file\"</span>: <span class=\"string\">\"results\"</span>,</span><br><span class=\"line\">    <span class=\"attr\">\"data\"</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">\"AL\"</span>: &#123; <span class=\"attr\">\"fill\"</span>: <span class=\"string\">\"#cc3d3d\"</span>, <span class=\"attr\">\"stroke\"</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">\"AK\"</span>: &#123; <span class=\"attr\">\"fill\"</span>: <span class=\"string\">\"#cc3d3d\"</span>, <span class=\"attr\">\"stroke\"</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">\"AZ\"</span>: &#123; <span class=\"attr\">\"fill\"</span>: <span class=\"string\">\"#cc3d3d\"</span>, <span class=\"attr\">\"stroke\"</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">\"AR\"</span>: &#123; <span class=\"attr\">\"fill\"</span>: <span class=\"string\">\"#cc3d3d\"</span>, <span class=\"attr\">\"stroke\"</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">\"CA\"</span>: &#123; <span class=\"attr\">\"fill\"</span>: <span class=\"string\">\"#1a80c4\"</span>, <span class=\"attr\">\"stroke\"</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        <span class=\"attr\">\"CO\"</span>: &#123; <span class=\"attr\">\"fill\"</span>: <span class=\"string\">\"#1a80c4\"</span>, <span class=\"attr\">\"stroke\"</span>: <span class=\"literal\">false</span> &#125;,</span><br><span class=\"line\">        //...</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;]</span><br></pre></td></tr></table></figure><p>The keys under the “data” section need to match the path names in the Illustrator document, in our case the two-letter state codes. If you set stroke or fill to false, Illustrator will remove the stroke/fill. If you want either stroke or fill to be left unchanged, simply leave them out in the data file. If you’re playing along with the tutorial you can <a href=\"https://gist.githubusercontent.com/gka/9864daba96d1111634d319ffe61137ee/raw/18e377f8253f32522f84e3bc310d07252881421b/colorizer.json\" target=\"_blank\" rel=\"noopener\">download the demo JSON file</a>.</p><h2 id=\"step-4-running-the-script\"><a class=\"anchor\" href=\"#step-4-running-the-script\"><span class=\"header-anchor\">#</span></a> Step 4: Running the script</h2><p>Finally you need to run the script. It will look for a data file called <code>colorizer.json</code> in the same folder where the Illustrator document is located. If it doesn’t find one, a file open dialog will pop up asking you for the location of the JSON data file. <img src=\"/blog/images/old/a1930760736ccab5ab3348d1a62ba2dd.png\" alt=\"\"> Just select the JSON file and click “Open”. Since the data file can contain multiple datasets, another dialog is popping up asking you to select a dataset from a list. This step also serves as final confirmation that you haven’t run the script accidentally. <img src=\"/blog/images/old/f6b2252af4873d5bad93ff947c76b2b8.png\" alt=\"\"> And boom: your map is now re-colored based on the colors from the data file. <img src=\"/blog/images/old/8a8db3e76bb924a540753af6afc5b194.png\" alt=\"\"></p>","contentSnippet":"When working on choropleth maps or charts in Illustrator, sometimes the (final) data is not yet available by the time you’re designing the graphic. The typical work-around is to re-import the updated part of the graphic and align it with the rest of the artwork. But this is tedious work, especially if you’re dealing with multiple maps. To address this problem I wrote an Illustrator script that can re-color the artwork based on a JSON file. This blog post will walk you through how to use the script.\n# Step 1: Installing the colorizer script\nTo install the script you will need to clone our ai-scripts repository inside your Illustrator script folder. If you’re on macOS or OSX this would look something like this:\n❯ cd /Applications/Adobe\\ Illustrator\\ CC\\ 2017❯ cd Presets.localized/en_US/Scripts❯ git clone git@github.com:newsdev/ai-scripts.git\nDepending on what Illustrator version you’re using you might need to adjust the path in the first line. Alternative to cloning the repo, you can also just download the ai-scripts ZIP archive and unpack it into the Illustrator Scripts folder.  After restarting Illustrator you should see the new scripts in the File > Scripts menu: \n# Step 2: Setting up the Illustrator document\nIn this tutorial we’re going to create a map of U.S. states. Let’s download the us-states.svg file, which I created by throwing a US census shapefile into the mapshaper web interface. The important thing about this SVG file is that every state path has the two-letter state postal code set as id attribute. And thankfully, Illustrator is preserving these ids as layer names during SVG import. \n# Step 3: Setting up the data file\nNow we’re going to need to create the JSON file needed by the colorizer-script. You can use whatever script or data source you want to create this file, as long as the final output looks similar to this:\n\n\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n\n[{\n    \"file\": \"results\",\n    \"data\": {\n        \"AL\": { \"fill\": \"#cc3d3d\", \"stroke\": false },\n        \"AK\": { \"fill\": \"#cc3d3d\", \"stroke\": false },\n        \"AZ\": { \"fill\": \"#cc3d3d\", \"stroke\": false },\n        \"AR\": { \"fill\": \"#cc3d3d\", \"stroke\": false },\n        \"CA\": { \"fill\": \"#1a80c4\", \"stroke\": false },\n        \"CO\": { \"fill\": \"#1a80c4\", \"stroke\": false },\n        //...\n    }\n}]\n\n\nThe keys under the “data” section need to match the path names in the Illustrator document, in our case the two-letter state codes. If you set stroke or fill to false, Illustrator will remove the stroke/fill. If you want either stroke or fill to be left unchanged, simply leave them out in the data file. If you’re playing along with the tutorial you can download the demo JSON file.\n# Step 4: Running the script\nFinally you need to run the script. It will look for a data file called colorizer.json in the same folder where the Illustrator document is located. If it doesn’t find one, a file open dialog will pop up asking you for the location of the JSON data file.  Just select the JSON file and click “Open”. Since the data file can contain multiple datasets, another dialog is popping up asking you to select a dataset from a list. This step also serves as final confirmation that you haven’t run the script accidentally.  And boom: your map is now re-colored based on the colors from the data file.","summary":"<p>When working on <a href=\"https://vis4.net/blog/posts/to-cartogram-or-not-to-cartogram-the-brexit/\">choropleth maps</a> or charts in Illus","id":"https://vis4.net/blog/2017/03/re-coloring-illustrator-graphics-based-on-data-files/","isoDate":"2017-03-02T09:31:18.000Z","blogTitle":"vis4.net"}},"__N_SSG":true}