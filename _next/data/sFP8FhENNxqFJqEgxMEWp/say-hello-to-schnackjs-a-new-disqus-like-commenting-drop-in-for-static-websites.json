{"pageProps":{"post":{"title":"Say hello to Schnack.js: A new Disqus-like commenting drop-in for static websites","link":"https://vis4.net/blog/2017/10/hello-schnack/","pubDate":"2017-10-08T20:54:30.000Z","content":"<p><strong>tl;dr:</strong> <a href=\"https://github.com/gka/schnack\" target=\"_blank\" rel=\"noopener\">Schnack.js</a> is an awesome, ad-free, open source Disqus clone that comes with a very minimal, hackable code base.</p><h2 id=\"how-to-embed-schnackjs\"><a class=\"anchor\" href=\"#how-to-embed-schnackjs\"><span class=\"header-anchor\">#</span></a> How to embed Schnack.js</h2><p>It works pretty much like other drop-in commenting systems. You drop a script tag under your blog posts, pass a few parameters and Schnack is doing the rest for you.</p><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"comments-go-here\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text/javascript\"</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">src</span>=<span class=\"string\">\"https://schnack.youdomain.com/embed.js\"</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">data-schnack-target</span>=<span class=\"string\">\".comments-go-here\"</span></span></span><br><span class=\"line\"><span class=\"tag\">   <span class=\"attr\">data-schnack-slug</span>=<span class=\"string\">\"my-blogpost-slug\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>Thanks to the <a href=\"#standing-on-the-shoulders-of-giants\">wonders</a> of modern science the <code>embed.js</code> comes at 2KB gzipped and minified. Your site has full control of the styling of the comments.</p><h2 id=\"how-schnack-is-protecting-against-spam\"><a class=\"anchor\" href=\"#how-schnack-is-protecting-against-spam\"><span class=\"header-anchor\">#</span></a> How Schnack is protecting against spam</h2><p>Schnack asks comment authors to sign in via Twitter or Github<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>. New comments need to be approved by the site owner before they show up. To save you some work you can also “trust” comment authors, in which case their comments are being approved automatically.</p><h2 id=\"how-to-install-schnack-on-your-server\"><a class=\"anchor\" href=\"#how-to-install-schnack-on-your-server\"><span class=\"header-anchor\">#</span></a> How to install Schnack on your server</h2><p>Schnack is a Node app and uses a SQLite database to store the comments. So all you really need to do is to clone the repo, run <code>npm install</code> and start the app.</p><p>To hook up the authentication you need to go to <a href=\"http://apps.twitter.com\" target=\"_blank\" rel=\"noopener\">apps.twitter.com</a>, create a new app and copy the api keys over to your <a href=\"https://github.com/gka/schnack/blob/master/config.tpl.json\" target=\"_blank\" rel=\"noopener\">config file</a>.</p><p>Schnack needs to run on a subdomain of the domain your blog is running on, mainly because that’s what cookie authentication is limited to<sup class=\"footnote-ref\"><a href=\"#fn2\" id=\"fnref2\">[2]</a></sup>.</p><h2 id=\"why-did-we-decide-to-work-on-schnack\"><a class=\"anchor\" href=\"#why-did-we-decide-to-work-on-schnack\"><span class=\"header-anchor\">#</span></a> Why did  we decide to work on Schnack?</h2><p>Ok, here’s a little backstory:</p><p><a href=\"/blog/2017/10/goodbye-wordpress/\">Last week</a> I replaced my old Wordpress blog with a static <a href=\"https://hexo.io\" target=\"_blank\" rel=\"noopener\">Hexo</a> website. Hexo gave me everything I wanted, except for one thing: I missed the comment box below my posts.</p><p>So I scouted out my options. <a href=\"https://disqus.com/\" target=\"_blank\" rel=\"noopener\">Disqus</a> was my first consideration, but I was put off by the ads that come with the free “Basic” plan, aside from <a href=\"https://blog.disqus.com/security-alert-user-info-breach?utm_source=motd_marketing&amp;utm_medium=web\" target=\"_blank\" rel=\"noopener\">privacy considerations</a>.</p><p>Then I thought there must be an app for this, but when I didn’t find one that fit my needs (see next section) I decided it’s time to do some hacking<sup class=\"footnote-ref\"><a href=\"#fn3\" id=\"fnref3\">[3]</a></sup>!</p><p>The next step was to put up a readme on Github, just to keep notes of what this app might look like and how it should be organized. My curious friends over at <a href=\"https://webkid.io\" target=\"_blank\" rel=\"noopener\">Webkid</a> found the readme while Github-lurking on my repositories and that’s how we got started!</p><h2 id=\"prior-art\"><a class=\"anchor\" href=\"#prior-art\"><span class=\"header-anchor\">#</span></a> Prior art</h2><p>Of course, Schnack is not the first of its kind. There are several open source alternatives that I could’ve used but I decided not to.</p><p>The new flag ship amonst open source commenting systems comes from a well-funded Mozilla-project named <a href=\"https://coralproject.net/\" target=\"_blank\" rel=\"noopener\">Coral Project</a> in collaboration with the Washington Post and New York Times. They have recently launched their comment software <a href=\"https://coralproject.net/products/talk.html\" target=\"_blank\" rel=\"noopener\">Talk</a> which is now <a href=\"https://www.washingtonpost.com/pr/wp/2017/09/06/the-washington-post-launches-talk-commenting-platform/\" target=\"_blank\" rel=\"noopener\">in use on washingtonpost.com</a>.</p><p>But after looking into Talk’s <a href=\"https://github.com/coralproject/talk\" target=\"_blank\" rel=\"noopener\">code base</a> I felt it was just way too complex for what I needed.</p><p>There also a few other open source commenting tools:</p><ul><li><a href=\"https://github.com/discourse/discourse\" target=\"_blank\" rel=\"noopener\">Discourse</a> - looks pretty complex as well, and is written in Ruby on Rails which I refuse to even look at</li><li><a href=\"https://github.com/adtac/commento\" target=\"_blank\" rel=\"noopener\">Commento</a> - looks clean and simple, but it’s written in Go, which is too fancy for me</li><li><a href=\"https://posativ.org/isso/\" target=\"_blank\" rel=\"noopener\">Isso</a> - I only saw this halfway through the coding. Looks actually very similar to Schnack, except it’s written in Python and doesn’t have third-party site authentication (but allows anonymous commenting).</li></ul><p>But I wanted something for Node and haven’t found it so far. Let me know in the comments below if I missed another project!</p><h2 id=\"whats-up-with-that-weird-name\"><a class=\"anchor\" href=\"#whats-up-with-that-weird-name\"><span class=\"header-anchor\">#</span></a> What’s up with that weird name?</h2><p>For non-Germans out there: It’s called <em>Schnack</em>, not <em>snack</em>, and it has nothing to do with <a href=\"http://www.urbandictionary.com/define.php?term=schnack\" target=\"_blank\" rel=\"noopener\">receiving sexual favors</a>.</p><p><a href=\"https://dict.leo.org/englisch-deutsch/schnack\" target=\"_blank\" rel=\"noopener\">Schnack</a> is simply a nice northern-German word for chatter that wasn’t already taken by other projects.</p><h2 id=\"can-i-try-schnack-now\"><a class=\"anchor\" href=\"#can-i-try-schnack-now\"><span class=\"header-anchor\">#</span></a> Can I try Schnack now?</h2><p>Yes, just leave a comment under this blog post!</p><h2 id=\"standing-on-the-shoulders-of-giants\"><a class=\"anchor\" href=\"#standing-on-the-shoulders-of-giants\"><span class=\"header-anchor\">#</span></a> Standing on the shoulders of giants</h2><p>It wouldn’t be possible to write an app like this in a few days without the amazing libraries it was built upon:</p><ul><li>Thanks to <a href=\"https://github.com/Rich-Harris\" target=\"_blank\" rel=\"noopener\">Rich Harris</a> for <a href=\"https://rollupjs.org/\" target=\"_blank\" rel=\"noopener\">Rollup</a> and <a href=\"https://buble.surge.sh/guide/\" target=\"_blank\" rel=\"noopener\">Bublé</a>, which we’re using to compile the super tiny Schnack comment renderer</li><li>Thanks to <a href=\"https://github.com/developit\" target=\"_blank\" rel=\"noopener\">Jason Miller</a> for <a href=\"https://github.com/developit/unfetch\" target=\"_blank\" rel=\"noopener\">unfetch</a> - the “500 bytes” fetch polyfil we’re using for embed-Schnack communication</li><li>Thanks to <a href=\"https://twitter.com/jaredhanson\" target=\"_blank\" rel=\"noopener\">Jared Hanson</a> for making <a href=\"http://passportjs.org/\" target=\"_blank\" rel=\"noopener\">PassportJS</a>, which we’re using to deal with Twitter and Facebook authentication</li><li>Also thanks to all the other open source contributors in the Node community. It’s been a lot of fun hacking Schnack.js together, mainly because of you!</li></ul><h2 id=\"its-2017-are-people-still-leaving-comments-under-blog-posts\"><a class=\"anchor\" href=\"#its-2017-are-people-still-leaving-comments-under-blog-posts\"><span class=\"header-anchor\">#</span></a> It’s 2017, are people still leaving comments under blog posts?</h2><p>Well, you tell me!</p><p>But reading through some of my older blog posts reminded my that a good blog is never just a one-way broadcast. I couldn’t bring it over myself to dump all the comments, and I definitly don’t want to miss out on future discussions that may arise.</p><p><a href=\"https://github.com/gka/schnack\" class=\"github-fork-ribbon\" style=\"position:fixed;padding:0px 35px;width:128px;top:40px;left:-50px;-webkit-transform:rotate(315deg);-moz-transform:rotate(315deg);-ms-transform:rotate(315deg);transform:rotate(315deg);box-shadow:0 0 0 3px #cc3300, 0 0 20px -3px rgba(0, 0, 0, 0.5);text-shadow:0 0 0 #ffffff, 0 0 5px rgba(0, 0, 0, 0.3);background-color:#cc3300;color:#ffffff;font-size:12px;text-decoration:none;font-weight:bold;border:2px dotted rgba(255,255,255,0.5);-webkit-backface-visibility:hidden;letter-spacing:.5px;background:#c30;box-sizing: content-box; text-align: center;\" target=\"_blank\" rel=\"noopener\">Fork on GitHub</a></p><style type=\"text/css\">@media (max-width:760px) {.github-fork-ribbon { display: none }}</style><hr class=\"footnotes-sep\"><section class=\"footnotes\"><ol class=\"footnotes-list\"><li id=\"fn1\" class=\"footnote-item\"><p>Other authentication provider like Facebook or Google can be added easily <a href=\"#fnref1\" class=\"footnote-backref\">↩︎</a></p></li><li id=\"fn2\" class=\"footnote-item\"><p>We could've also used an iframe but I kind of didn't want to <a href=\"#fnref2\" class=\"footnote-backref\">↩︎</a></p></li><li id=\"fn3\" class=\"footnote-item\"><p>Back when I made my first websites, almost all websites used to be static, hand-written HTML files, and you would write or download some CGI or PHP script to add a &quot;guest book&quot; to your page. This problem is basically how I learned programming. <a href=\"#fnref3\" class=\"footnote-backref\">↩︎</a></p></li></ol></section>","contentSnippet":"tl;dr: Schnack.js is an awesome, ad-free, open source Disqus clone that comes with a very minimal, hackable code base.\n# How to embed Schnack.js\nIt works pretty much like other drop-in commenting systems. You drop a script tag under your blog posts, pass a few parameters and Schnack is doing the rest for you.\n\n\n1\n2\n3\n4\n5\n\n<div class=\"comments-go-here\"></div>\n<script type=\"text/javascript\"\n   src=\"https://schnack.youdomain.com/embed.js\"\n   data-schnack-target=\".comments-go-here\"\n   data-schnack-slug=\"my-blogpost-slug\"></script>\n\n\nThanks to the wonders of modern science the embed.js comes at 2KB gzipped and minified. Your site has full control of the styling of the comments.\n# How Schnack is protecting against spam\nSchnack asks comment authors to sign in via Twitter or Github[1]. New comments need to be approved by the site owner before they show up. To save you some work you can also “trust” comment authors, in which case their comments are being approved automatically.\n# How to install Schnack on your server\nSchnack is a Node app and uses a SQLite database to store the comments. So all you really need to do is to clone the repo, run npm install and start the app.\nTo hook up the authentication you need to go to apps.twitter.com, create a new app and copy the api keys over to your config file.\nSchnack needs to run on a subdomain of the domain your blog is running on, mainly because that’s what cookie authentication is limited to[2].\n# Why did  we decide to work on Schnack?\nOk, here’s a little backstory:\nLast week I replaced my old Wordpress blog with a static Hexo website. Hexo gave me everything I wanted, except for one thing: I missed the comment box below my posts.\nSo I scouted out my options. Disqus was my first consideration, but I was put off by the ads that come with the free “Basic” plan, aside from privacy considerations.\nThen I thought there must be an app for this, but when I didn’t find one that fit my needs (see next section) I decided it’s time to do some hacking[3]!\nThe next step was to put up a readme on Github, just to keep notes of what this app might look like and how it should be organized. My curious friends over at Webkid found the readme while Github-lurking on my repositories and that’s how we got started!\n# Prior art\nOf course, Schnack is not the first of its kind. There are several open source alternatives that I could’ve used but I decided not to.\nThe new flag ship amonst open source commenting systems comes from a well-funded Mozilla-project named Coral Project in collaboration with the Washington Post and New York Times. They have recently launched their comment software Talk which is now in use on washingtonpost.com.\nBut after looking into Talk’s code base I felt it was just way too complex for what I needed.\nThere also a few other open source commenting tools:\n\nDiscourse - looks pretty complex as well, and is written in Ruby on Rails which I refuse to even look at\nCommento - looks clean and simple, but it’s written in Go, which is too fancy for me\nIsso - I only saw this halfway through the coding. Looks actually very similar to Schnack, except it’s written in Python and doesn’t have third-party site authentication (but allows anonymous commenting).\n\nBut I wanted something for Node and haven’t found it so far. Let me know in the comments below if I missed another project!\n# What’s up with that weird name?\nFor non-Germans out there: It’s called Schnack, not snack, and it has nothing to do with receiving sexual favors.\nSchnack is simply a nice northern-German word for chatter that wasn’t already taken by other projects.\n# Can I try Schnack now?\nYes, just leave a comment under this blog post!\n# Standing on the shoulders of giants\nIt wouldn’t be possible to write an app like this in a few days without the amazing libraries it was built upon:\n\nThanks to Rich Harris for Rollup and Bublé, which we’re using to compile the super tiny Schnack comment renderer\nThanks to Jason Miller for unfetch - the “500 bytes” fetch polyfil we’re using for embed-Schnack communication\nThanks to Jared Hanson for making PassportJS, which we’re using to deal with Twitter and Facebook authentication\nAlso thanks to all the other open source contributors in the Node community. It’s been a lot of fun hacking Schnack.js together, mainly because of you!\n\n# It’s 2017, are people still leaving comments under blog posts?\nWell, you tell me!\nBut reading through some of my older blog posts reminded my that a good blog is never just a one-way broadcast. I couldn’t bring it over myself to dump all the comments, and I definitly don’t want to miss out on future discussions that may arise.\nFork on GitHub\n@media (max-width:760px) {.github-fork-ribbon { display: none }}\n\n\nOther authentication provider like Facebook or Google can be added easily ↩︎\n\nWe could've also used an iframe but I kind of didn't want to ↩︎\n\nBack when I made my first websites, almost all websites used to be static, hand-written HTML files, and you would write or download some CGI or PHP script to add a \"guest book\" to your page. This problem is basically how I learned programming. ↩︎","summary":"<p><strong>tl;dr:</strong> <a href=\"https://github.com/gka/schnack\" target=\"_blank\" rel=\"noopener\">Schnack.js</a> is an awesome, ad-free, op","id":"https://vis4.net/blog/2017/10/hello-schnack/","isoDate":"2017-10-08T20:54:30.000Z","blogTitle":"vis4.net"}},"__N_SSG":true}