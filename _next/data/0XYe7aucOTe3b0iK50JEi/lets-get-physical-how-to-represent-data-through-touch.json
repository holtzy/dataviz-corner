{"pageProps":{"post":{"creator":"Alice Corona","title":"Let’s get physical: how to represent data through touch","link":"https://datajournalism.com/read/longreads/lets-get-physical-how-to-represent-data-through-touch","pubDate":"Tue, 16 Jul 2019 00:30:00 +0200","author":"Alice Corona","content":"\n                                                                        <p>Data visualisation has become a natural companion for journalists reporting complex data stories in both print and in digital formats. But visual cues are just one of many possible ways to encode data, and humans have been embedding data into the properties of physical objects for millennia (think of the <a href=\"http://dataphys.org/list/peruvian-quipus/\">Peruvian quipus</a>).</p>\n<p>Despite this ancient history,  the term ‘data physicalisation’ has only just appeared in academic literature quite recently, in <a href=\"https://hal.inria.fr/hal-01120152/document\">a 2015 paper</a> by Yvonne Jansen, Pierre Dragicevic, and others:</p>\n\n                                                                     \n                            <blockquote><p>A data physicalization (or simply physicalization) is a physical artifact whose geometry or material properties encode data.</p>\n</blockquote>\n\n                                                                      \n                            <h2>What is data physicalisation?</h2>\n<p>Depending on its actual form, a data physicalisation can be seen, touched, heard, tasted, smelled, and more. Other than the artefact itself, the term also refers to the process of transforming data values into physical properties. When designing a data physicalisation, data can be used to shape the <strong>geometry</strong> of a physical object, much like how lengths, angles, and slopes are used to encode data in visualisations.  Additionally, data can be encoded in the <strong>material</strong> itself and its characteristics. Texture, consistency, coldness, or weight, can all be used to both encode data and to set a specific mood and emotional relationship with the object,  including by leveraging existing cultural meanings associated with the material.</p>\n\n                                                                      \n                            <p><a href=\"http://www.stefanieposavec.com/airtransformed\">Touching Air</a> by Stefanie Posavec and Miriam Quick. Credit: <a href=\"http://dataphys.org/list/\">List of physical visualisations</a>.</p>\n\n                                                                      \n                            <p>Physical data objects can be more <strong>inclusive</strong> and <strong>intuitive</strong> than purely visual ones, and not just because they are accessible to blind people or because they have a lower tech barrier. After all, long before swipes and clicks, humans have thousands of years of experience in figuring out how to interact with the analog world through an almost infinite range of bodily motions and hand gestures.</p>\n\n                                                                      \n                            <p>Illustrations of the exploratory procedures and their associated material and object properties, adapted and redrawn based on<a href=\"https://link.springer.com/article/10.3758/APP.71.7.1439\"> Lederman and Klatzky’s 2009 research</a>, by Simon Stusak, <a href=\"https://edoc.ub.uni-muenchen.de/20190/1/Stusak_Simon.pdf\">Exploring the Potential of Physical Visualizations</a>, in the 2015 <a href=\"https://doi.org/10.1145/2677199.2691604\">Proceedings of the Ninth International Conference on Tangible, Embedded, and Embodied Interaction (TEI '15)</a>.</p>\n\n                                                                      \n                            <p>The way that we interact with an object, and the physical gestures required to do so, play a key role in shaping our experience of that object and our future modes of interaction. Studies <a href=\"https://www.sciencedirect.com/science/article/pii/S0885201404000425?via%3Dihub\">have concluded</a> that being able to handle and manually interact with an object aids cognition, for example in the case of letting children play with physical letters to learn the alphabet. Research specifically focused on data is still relatively new, although there are a few excellent studies in which scholars have experimented to see if this argument applies to tangible data representations. Is our memory enhanced when multiple senses work on a cognitive task? Can we <a href=\"https://hal.inria.fr/hal-00781831/PDF/Evaluating_the_Efficiency_of_Physical_Visualizations.pdf\">remember more</a> if data is represented on a 3D physical bar chart that we can see, caress, and touch, rather than a 2D digital bar chart? Can we <a href=\"https://edoc.ub.uni-muenchen.de/20190/1/Stusak_Simon.pdf\">retrieve information</a> from a data physicalisation more easily than we can from a digital visualisation?</p>\n\n                                                                      \n                            <h2>A journalistic context for data physicalisation</h2>\n<p>The potential journalistic benefits of physical data representations are not limited to how such objects perform in terms of information retrieval and memorability. Physical news installations inherently have some characteristics that make them a great complement to online journalism. For example, they can be used to deliver interactive data journalism in places with limited internet access. They can be designed to be fully accessible for the visually impaired, unlike online data viz. They are also more straightforward to interact with than rich online interactives, and can therefore be used to<strong> </strong>teach and improve the audience’s data and visual literacies. (Think: Hans Rosling’s <a href=\"https://www.gapminder.org/videos/population-growth-explained-with-ikea-boxes/\">Population growth explained with IKEA boxes</a>.)</p>\n<p>Furthermore, physical data installations can have a role in<strong> </strong>fostering civic engagement, as <a href=\"https://www.bujatt.com/\">Attila Bujdosó</a> describes in his 2012 essay, <a href=\"https://www.academia.edu/6156845/Data_Embodiment_as_a_Strategy_for_Citizen_Engagement\">Data embodiment as a strategy for citizen engagement</a>:</p>\n\n                                                                      \n                            <blockquote><p>“...public data embodiment objects promise the potential of generating collective experiences in a community, which can strengthen the shared identity among its members and develop a group responsibility for collective issues.”</p>\n</blockquote>\n\n                                                                      \n                            <p>There is even a specific practice of data physicalisation, called ‘<a href=\"https://medium.com/we-are-sheldon/participatory-data-physicalization-a-new-space-to-design-health-care-informative-experiences-3912484f8e34\">Participatory Data Physicalisation</a>’, that explicitly highlights this focus on the collective experience. In such works, the data physicalisation is not an object designed top-down, but rather, in the words of  <a href=\"https://medium.com/we-are-sheldon/participatory-data-physicalization-a-new-space-to-design-health-care-informative-experiences-3912484f8e34\">Matteo Moretti</a>, a “shared experience, where visitors [become] participants: protagonists and recipients of the visualization”.</p>\n\n                                                                      \n                            <p><a href=\"https://medium.com/we-are-sheldon/participatory-data-physicalization-a-new-space-to-design-health-care-informative-experiences-3912484f8e34\">Participatory Data physicalisation @ TED Med 2017 Milan</a>, by Know and belive, the Free University of Bozen-Bolzano, and Matteo Moretti.</p>\n\n                                                                      \n                            <p>The fact that a physical data representation does not need to be opened in a browser, but is somehow ‘always there’, means that it can promote an<strong> </strong>informal and casual experience, which is more inviting to novice and non-expert users. Newsrooms could coordinate with public spaces (like parks, libraries, or museums) to host events and news installations on topics of local relevance, like the local administration’s spending budget or traffic accidents. Such installations would continue to inhabit the place for defined periods of time, offering a constant visual token as people walk by it, perhaps spontaneously engaging with it and debating its message with other members of the community. </p>\n<p>Developments in newsroom business models suggest that this path is compatible with what is working in terms of revenue. As newsrooms <a href=\"http://www.digitalnewsreport.org/survey/2017/overview-key-findings-2017/\">rely less and less on ads and more on membership models, subscriptions, and donations</a>, there will be more room for experiments in ways to better engage the audience.</p>\n<p>In parallel, newsrooms are <a href=\"https://medium.com/we-are-the-european-journalism-centre/70-european-news-organisations-that-will-inspire-your-community-engagement-work-b1ef57b53a3a\">increasingly</a> grounding their practice in the community<strong> </strong>they work with. According to the <a href=\"https://engagedjournalism.com/\">Engaged Journalism Accelerator</a>, which promotes similar initiatives, these kinds of journalistic practices have “the potential to restore trust in media, provide citizens with information they need and help establish new and resilient revenue models and enhance plurality and diversity in a crucial part of society’s information ecosystem”. </p>\n<p>Lastly, journalism events are becoming more common and are a perfect match for physical data installations. <a href=\"https://engagedjournalism.com/\">NiemanLab’s research</a> across Western media outlets puts physical journalism, “in the form of public meetings, festivals, events, and stage plays”, among the nine core ideas for innovative journalism. In the USA, The Washington Post, Politico, National Journal, the New York Times, NPR and others are <a href=\"https://www.washingtonpost.com/lifestyle/style/news-organizations-increasingly-turn-to-sponsored-discussions-as-source-of-revenue/2014/03/13/03b79dde-a642-11e3-bf3d-63f593e487a9_story.html?noredirect=on&amp;utm_term=.971d9d057610\">all hosting live journalism events</a>. The Texas Tribune <a href=\"https://www.nytimes.com/2013/10/28/business/media/media-outlets-embrace-conferences-as-profits-rise.html\">generates almost as much income from events as from corporate gifts</a>, while The Atlantic <a href=\"https://www.washingtonpost.com/lifestyle/style/news-organizations-increasingly-turn-to-sponsored-discussions-as-source-of-revenue/2014/03/13/03b79dde-a642-11e3-bf3d-63f593e487a9_story.html?utm_term=.e530fcbbf2d6\">makes about 20% of its revenue</a> from the roughly 100 live events it organises per year.</p>\n<p>In short: it seems like a perfect time for newsrooms to experiment with data physicalisation. But where to start? The following section provides a quick primer on how to go from a .CSV or a .GEOJSON file to a 3D tactile map, all while learning the common tools and stages of a data physicalisation process using digital fabrication.</p>\n\n                                                                      \n                            <h2>Crafting physical data objects</h2>\n<p>First, let’s look at the main steps that will allow you to transform a data file into a 3D map. As an example, we’re going to use data from the website <a href=\"http://insideairbnb.com/\">Inside Airbnb</a>, an independent watchdog that collects data to help researchers assess the impact of Airbnb in their city’s housing stock. We’ll focus on two European cities that symbolically sit at the opposite end of the spectrum in terms of regulation: Barcelona and Venice. On one hand, Barcelona can be seen at the frontlines of <a href=\"https://www.citylab.com/life/2018/06/barcelona-finds-a-way-to-control-its-airbnb-market/562187/\">restricting touristic short-term rentals</a> through a system of licenses and quotas, and via a direct agreement with Airbnb to access hosts’ data. On the other, Venice has very limited regulation, mostly just on tax issues. To compare these approaches, we’re going to <del>visualise </del> physicalise the number of entire apartment listings in a hexagon grid map. Once you familiarise yourself with this process, it can be repeated for any of the 70+ cities for which you find data on the <a href=\"http://insideairbnb.com/index.html\">Inside Airbnb website</a>. </p>\n<p>In this tutorial, we’re going to design the maps separately, so that they can be presented independently or next to each other like a series of small multiples maps. The design and fabrication of these maps has been developed by <a href=\"http://chihauccisoilconte.eu/\">Chi ha ucciso il Conte?</a>, an Italian designer and expert in digital fabrication and open source software.</p>\n\n                                                                      \n                            <h3>Digital fabrication</h3>\n<p>To craft our data driven objects, we’re going to use digital fabrication techniques. Digital fabrication is a manufacturing process that uses the numerical values generated by computer software as coordinates to control machines and create objects with an accuracy that would be hardly achievable by a human being. Typical machines are <a href=\"https://en.wikipedia.org/wiki/3D_printing\">3D printers</a> and <a href=\"https://www.thomasnet.com/articles/custom-manufacturing-fabricating/understanding-cnc-milling/\">CNC milling machines</a>.</p>\n<p>Not all data physicalisations are made through these kinds of semi-automated processes. For example, you could represent data through <a href=\"http://dataphys.org/list/hostile-terrain-94/\">existing physical objects</a>, or you could hand-craft data objects even out of <a href=\"https://www.instagram.com/daydohviz/\">Play Doh</a>, <a href=\"https://www.youtube.com/watch?v=laUPeXZlPEg\">Lego</a>, or even by <a href=\"http://dataphys.org/list/self-knitted-scarf-of-train-delays/\">knitting</a>. However, digital fabrication technologies have a series of advantages that make them a good match for our project:</p>\n<ul>\n<li>they allow for rapid manufacturing of the desired outputs</li>\n<li>their high level of accuracy makes them perfect to work with data</li>\n<li>the same design file can be repeatedly used to create reliable and consistent outputs anywhere in the world, meaning that an unlimited number of news organisations (or local units of the same news organisations) could manufacture an identical output locally, using the original design file.</li>\n</ul>\n<p>A typical digital fabrication workflow starts right after the designer has clearly established the look, structure, and functioning of the desired output on pen and paper, including the definition of more technical characteristics like the dimensions of all its various parts.</p>\n\n                                                                      \n                            <p>An example of a digital fabrication workflow.</p>\n\n                                                                      \n                            <p>The first component of a typical digital fabrication workflow is to transform these sketches and drawings into a digital, mathematical, and 3D model of all the components that need to be produced for the final output. This phase could encompass things like:  </p>\n<ul>\n<li>binding the data points and spreadsheet into visual elements such as the lines, curves, lengths, and widths of the physical object that will go into production</li>\n<li>modeling the physical components needed to host sensors or motors to record and animate the data</li>\n<li>building physical boards with engraved information about the data, axis ticks, labels, annotations, titles, and so on.</li>\n</ul>\n<p>Once the 3D modeling phase is complete, this visual and human-friendly design needs to be converted into a file with machine-readable instructions, so that a manufacturing machine can accurately and reliably craft the designed objects. This procedure is called G-Code generation. The G-Code file is the one that eventually gets imported into the machine.</p>\n\n                                                                      \n                            <h3>The workflow</h3>\n<p>Now to what happens at each stage of the data physicalisation process. We’ll just be covering high-level instructions, focused on the input/output of each phase and what each intermediary step should be, rather than detail of each software’s interface or how to practically execute the commands (although we will provide links on where to find additional resources for each). If you have specific questions, feel free to <a href=\"mailto:alice@batjo.eu\">contact the author</a>. </p>\n<p>For this example, we will only use a 3D printer, as it is the most approachable of the possible machines to build a 3D hexagonal grid map, along with entirely open source software: </p>\n<ul>\n<li><a href=\"https://www.qgis.org/it/site/\">QGIS</a> for the data preparation</li>\n<li><a href=\"https://www.freecadweb.org/\">FreeCAD</a> and <a href=\"https://www.blender.org/\">Blender</a> for 3D modeling</li>\n<li><a href=\"https://slic3r.org/\">Slic3r</a> for generating the GCode.</li>\n</ul>\n<p>Our workflow will show you how to create a single map for the city of Barcelona. Creating the second map for the city of Venice (or any other city) will require the same steps, just with different input data. I have imported all of the output files mentioned at the different stages into <a href=\"https://github.com/TheBatjoTeam/ejc-tactile-data\">this GitHub repo</a>. Feel free to download them and use them for reference, or to directly print your own versions of these two maps, skipping the preparation and modeling phase.</p>\n\n                                                                      \n                            <h4>1. Prepare the data</h4>\n\n                                                                      \n                            \n                                                                      \n                            <p><strong>Software</strong>: <a href=\"https://www.qgis.org/en/site/\">QGIS</a></p>\n<p><strong>Input</strong>: Two files downloaded from the <a href=\"http://insideairbnb.com/get-the-data.html\">Inside Airbnb website</a>: the ‘neighbourhood.geojson’ file and the ‘listings.csv’ file for the city of Barcelona.</p>\n<p><strong>Output</strong>: Two files for each city:</p>\n<ol>\n<li>One <strong>.</strong>SVG file with the outer boundaries of Barcelona. We’ll call it ‘barcelona-boundaries.svg’.</li>\n<li>One <strong>.</strong>SHP file with a hexagonal grid vector layer, containing the number of entire apartments in each hexagonal area. There should be a minimal buffer between the hexagons, and the grid should include only areas with one or more apartment. We’ll call it ‘barcelona-airbnb.shp’.</li>\n</ol>\n<p><strong>To create the .SVG file</strong>:</p>\n<ol>\n<li>Open QGIS and import the ‘neighbourhood.geojson’ file.</li>\n<li>Apply the <a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/processing_algs/qgis/vectorgeometry.html?highlight=dissolve#dissolve\">dissolve</a> command on the layer to delete all inner boundaries dividing the different neighbourhoods, resulting in a vector layer containing only the outer boundaries of the city.</li>\n<li>Use QGIS’s <a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/print_composer/create_output.html?highlight=export%20layer#export-as-svg\">print composer</a> to export the <strong>.</strong>SVG of this simplified layer. Let’s call this file ‘barcelona-boundaries.svg’.</li>\n</ol>\n\n                                                                      \n                            \n                                                                      \n                            <p><strong>To create the .SHP file:</strong></p>\n<ol>\n<li>Import the ‘listings.csv’ file in QGIS.</li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/working_with_vector/query_builder.html\">Filter</a> the ‘listings’ to include only entire apartments.</li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/processing_algs/qgis/vectorcreation.html?highlight=regular%20grid#create-grid\">Create a regular grid</a> vector layer of 500x500m hexagons. </li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/processing_algs/qgis/vectoroverlay.html?highlight=geoprocessing%20clip#clip\">Clip</a> the hexagon grid with the dissolved neighbourhood layer.</li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/processing_algs/qgis/vectoranalysis.html?highlight=count%20points#count-points-in-polygon\">Count the number of points</a> in the filtered listings layer belonging to each hexagon of the grid.</li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/processing_algs/qgis/vectorgeometry.html?highlight=buffer#buffer\">Add a minimal negative buffer</a> (-0.01 meters) to make sure the hexagons of the grid don’t touch each other. This is important because the 3D modeling software you will use needs to work with distinct solids without any overlapping lines,  and in the default hexagonal grid created by QGIS, the polygons overlap. Giving the buffer zone a very minimal number removes any overlapping while creating a gap that is essentially imperceptible to the eye.</li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/working_with_vector/query_builder.html\">Filter</a> the buffered layer so that it includes only hexagons for areas with at least one entire apartment within it.</li>\n<li><a href=\"https://docs.qgis.org/3.4/en/docs/user_manual/managing_data_source/create_layers.html#creating-new-layers-from-an-existing-layer\">Export the layer</a> as a <strong>.</strong>SHP file, with the CRS set to either WGS84 or Web Mercator. Let’s call this file ‘barcelona-airbnb.shp’.</li>\n</ol>\n\n                                                                      \n                            \n                                                                      \n                            <h4>2.a. Create a 3D model for base of the 3D map</h4>\n\n                                                                      \n                            \n                                                                      \n                            <p><strong>Software</strong>: <a href=\"https://www.freecadweb.org/\">FreeCAD</a></p>\n<p><strong>Input</strong>: The<strong> .</strong>SVG file created in the previous phase, ‘barcelona-boundaries.svg’.</p>\n<p><strong>Output</strong>: Two .STL files, one containing a square base; another with extruded 3D boundaries of the city. We’ll call them ‘barcelona-base.stl’ and ‘barcelona-city-map.stl’. They will be used for reference in the next step.</p>\n<p><strong>To create the .STL files</strong>:</p>\n<ol>\n<li>Open FreeCAD.</li>\n<li><a href=\"https://www.freecadweb.org/wiki/Sketcher_CreateRectangle\">Draw</a> a 20x20cm square. This will serve as a reference point for how big the map should be. The size can depend on the printer you have access to: the bigger the building plate, the bigger you can make the map and its base.</li>\n<li><a href=\"https://www.freecadweb.org/wiki/PartDesign_Pad\">Extrude</a> the square by 5mm.</li>\n<li><a href=\"https://www.freecadweb.org/wiki/Export_to_STL_or_OBJ\">Export</a> this extruded object as a <strong>.</strong>STL mesh (called ‘barcelona-base.stl’).</li>\n<li><a href=\"https://www.freecadweb.org/wiki/Import_text_and_geometry_from_Inkscape\">Import</a> the <strong>.</strong>SVG with the city’s outer boundaries on FreeCAD.</li>\n<li><a href=\"https://www.freecadweb.org/wiki/Part_Extrude\">Extrude</a> the .SVG by 2mm.</li>\n<li><a href=\"https://www.freecadweb.org/wiki/Export_to_STL_or_OBJ\">Export</a> this extruded object as a .STL mesh (let’s call it ‘barcelona-city-map.stl’).</li>\n</ol>\n\n                                                                      \n                            \n                                                                      \n                            <h4>2.b. Create a 3D model of the hexagonal grid map layer</h4>\n\n                                                                      \n                            \n                                                                      \n                            <p><strong>Software</strong>: <a href=\"https://www.blender.org/\">Blender</a> and the <a href=\"https://github.com/domlysz/BlenderGIS\">Blender GIS Add-on</a></p>\n<p><strong>Input</strong>: The <strong>.</strong>STL file with the city map created in the previous step and the <strong>.</strong>SHP file created in the first phase, for both cities. So: ‘barcelona-city-map.stl’ and ‘barcelona-airbnb.shp’.</p>\n<p><strong>Output</strong>: A <strong>.</strong>STL file containing a 3D model of the hexagonal maps, with the height of each hexagon defined by the number of entire apartment listings in that area. We’ll call it ‘barcelona-airbnb3d.stl’.</p>\n<p><strong>To create the .STL file</strong>:</p>\n<ol>\n<li>Open Blender.</li>\n<li><a href=\"https://docs.blender.org/manual/en/latest/data_system/files/import_export.html\">Import</a> first the <strong>.</strong>STL file with the city map.</li>\n<li><a href=\"https://github.com/domlysz/BlenderGIS/wiki/Shapefile-import\">Import</a> the .SHP file with the hexagonal grid and the data on entire apartments. You will see this option only if you have installed the <a href=\"https://github.com/domlysz/BlenderGIS\">Blender GIS Add-on</a>.</li>\n<li>In the import options, before clicking ‘OK’, make sure that you specify the following parameters:<ol>\n<li>Extrusion from fields: tick the check box</li>\n<li>Field: choose the field that contains the number of apartments</li>\n<li>Extrude along: choose ‘Z axis’</li>\n<li>CRS: specify the correct CRS.</li>\n</ol>\n</li>\n<li>The imported <strong>.</strong>SHP file is probably very big: resize it so that it snaps into the city boundaries of the city map <strong>.</strong>STL file.</li>\n<li>Perform a <a href=\"https://docs.blender.org/manual/en/latest/modeling/modifiers/generate/booleans.html?highlight=boolean%20union\">boolean</a> union operation to unite the base city map to the 3D hexagons into a single solid.</li>\n<li><a href=\"https://docs.blender.org/manual/en/latest/data_system/files/import_export.html\">Export</a> the solid as an .STL file. Let’s call the file ‘barcelona-airbnb3d.stl’.</li>\n</ol>\n\n                                                                      \n                            \n                                                                      \n                            <h4>3. Create the GCode for the 3D printed hexagonal grid map layer</h4>\n\n                                                                      \n                            \n                                                                      \n                            <p><strong>Software</strong>: <a href=\"https://slic3r.org/\">Slic3r</a> </p>\n<p>Slic3r is a ‘slicer’ --  a software that processes the 3D model and generated instructions for the 3D printer, for example by slicing the volume into thin layers, creating supports for hanging elements, and so on. The version of Slic3r used in this tutorial is a custom version tailored to the 3D printer used, a <a href=\"https://www.prusa3d.com/original-prusa-i3-mk3/\">Prusa i3 mk3</a>, but you will find the same commands in any Slic3r version. If you are using a general version of Slic3r, then you will need to set the configurations appropriately for your specific 3D printer. It’s wise to talk to the owner/operator of the 3D printer in this phase.</p>\n<p><strong>Input</strong>: The <strong>.</strong>STL file containing the 3D model of the hexagonal maps, so ‘barcelona-airbnb3d.stl’.</p>\n<p><strong>Output</strong>: A <strong>.</strong>GCODE file that can be sent to the 3D printer. We’ll call it ‘barcelona-airbnb-3dprint.gcode’.</p>\n<p><strong>To create the .GCODE  file</strong>:</p>\n<ol>\n<li>Open Slic3r.</li>\n<li><a href=\"https://manual.slic3r.org/first-print/working-with-models\">Add</a> the <strong>.</strong>STL file with the 3D hexagonal grid map, ‘barcelona-airbnb3d.stl’.</li>\n<li>Check if the <a href=\"https://manual.slic3r.org/expert-mode/print-settings\">print settings</a> are correct (the default ones usually work fine) and <a href=\"https://blog.prusaprinters.org/slic3r-prusa-edition-beginners-guide/#default\">slice</a> the model.</li>\n<li><a href=\"https://blog.prusaprinters.org/slic3r-prusa-edition-beginners-guide\">Export</a> a .GCODE file of the sliced object. Let’s call it ‘barcelona-airbnb-3dprint.gcode’.</li>\n</ol>\n\n                                                                      \n                            \n                                                                      \n                            <h4>4. 3D printing the map</h4>\n\n                                                                      \n                            \n                                                                      \n                            <p><strong>Hardware</strong>: <a href=\"https://www.prusa3d.it/original-prusa-i3-mk3-it/\">Prusa i3</a>, or other 3D printer</p>\n<p>For this part of the project, it is advisable to first contact the person who will be operating the machine to produce your output. This because every machine has its own specs, capabilities, and possibly even software.</p>\n<p><strong>Input</strong>: the <strong>.</strong>GCODE file with the instructions for the 3D printer.</p>\n<p><strong>Output</strong>: a physical map of Airbnb entire apartments distribution in Barcelona.</p>\n<p><strong>To 3D print the map</strong>:</p>\n<ol>\n<li>Copy the <strong>.</strong>GCode file (‘barcelona-airbnb-3dprint.gcode’) onto an SD card/USB drive depending on what your 3D printer reads.</li>\n<li>Insert the SD card into the 3D printer.</li>\n<li>Prepare the PLA filament and insert the spool in its lodging, if it is not already in place.</li>\n<li>Insert the lead of the filament into the hole on top of the extruder.</li>\n<li>Preheat the extruder and the building plate.</li>\n<li>When the extruder and the building plate reach the temperature, load the filament. Check that it flows down smoothly, otherwise repeat steps 5-6 again.</li>\n<li>Select the <strong>.</strong>GCode file and print it. For reference, consider that it should take approximately 1 hour and a half to complete. You don’t need to sit next to your 3D printer the whole time, but it might be useful to check on the process every once in a while. </li>\n<li>When the piece is completely printed, delicately remove it from the building plate. The piece might be attached quite firmly, so you might need a spatula to aid you in the operation. </li>\n<li>Use some pliers to clean up the object by removing extra filament traces around the edges.</li>\n<li>PLA plastic is very easy to recycle: make sure you discard the scraps and waste appropriately, for example by bringing it to a PLA filament recycling facility or at least by throwing it away in a plastic recycling bin.</li>\n</ol>\n\n                                                                      \n                            \n                                                                      \n                            <h4>5. Assemble</h4>\n<p>You can layout your 3D maps on a wooden support, eventually adding contextual information like titles and a 3D legend. You could write them in pen, paint them, or even try to 3D print them like we did. You can repeat this process to portray multiple cities.</p>\n\n                                                                                                                                                             <p>In these tactile maps, data patterns are communicated through multiple senses, and both sight and touch work together to show how the two cities have similarities in terms of geographical distribution -- Airbnb listings are concentrated in the central areas -- and stark differences in terms of scale.</p>\n\n                                                                                                  \n                            <p>The center of Venice has a concentration of up to 444 listings inside the area of a single 500x500m hexagon, while in Barcelona this maximum number is halved at only 207 listings. This disproportion is even more significant if we consider the population of the two cities: Venice is home to roughly 270,000 people (of which only 52,000 live in the central ‘fish’ that hosts the majority of Airbnb listings), while Barcelona is home to 1.7 million.</p>\n<p>These types of tactile maps are a very basic data physicalisation type that can even be produced by beginners. At the same time, they are a novel and powerful way to present data beyond purely visuals cues, allowing people to interact with your data and retrieve information from it in a physical setting.</p>\n\n                                                                      \n                            \n                                                                      \n                            <h2>Conclusion</h2>\n<p>As software and hardware progress, the technical barriers to making data physicalisation will lower, as it did for data visualisations. But, technology aside, data physicalisation is first of all a process that begins in the mind, by thinking creatively about what can be used to encode data beyond the visual and what types of experiences you want to foster in your community. And for this, you don’t need complex technical skills, it is first of all about imagination. So, I’ll leave you with this question: What data physicalisation do you imagine for your next story?</p>\n\n                                              \n                ","contentSnippet":"Data visualisation has become a natural companion for journalists reporting complex data stories in both print and in digital formats. But visual cues are just one of many possible ways to encode data, and humans have been embedding data into the properties of physical objects for millennia (think of the Peruvian quipus).\nDespite this ancient history,  the term ‘data physicalisation’ has only just appeared in academic literature quite recently, in a 2015 paper by Yvonne Jansen, Pierre Dragicevic, and others:\nA data physicalization (or simply physicalization) is a physical artifact whose geometry or material properties encode data.\nWhat is data physicalisation?\nDepending on its actual form, a data physicalisation can be seen, touched, heard, tasted, smelled, and more. Other than the artefact itself, the term also refers to the process of transforming data values into physical properties. When designing a data physicalisation, data can be used to shape the geometry of a physical object, much like how lengths, angles, and slopes are used to encode data in visualisations.  Additionally, data can be encoded in the material itself and its characteristics. Texture, consistency, coldness, or weight, can all be used to both encode data and to set a specific mood and emotional relationship with the object,  including by leveraging existing cultural meanings associated with the material.\nTouching Air by Stefanie Posavec and Miriam Quick. Credit: List of physical visualisations.\nPhysical data objects can be more inclusive and intuitive than purely visual ones, and not just because they are accessible to blind people or because they have a lower tech barrier. After all, long before swipes and clicks, humans have thousands of years of experience in figuring out how to interact with the analog world through an almost infinite range of bodily motions and hand gestures.\nIllustrations of the exploratory procedures and their associated material and object properties, adapted and redrawn based on Lederman and Klatzky’s 2009 research, by Simon Stusak, Exploring the Potential of Physical Visualizations, in the 2015 Proceedings of the Ninth International Conference on Tangible, Embedded, and Embodied Interaction (TEI '15).\nThe way that we interact with an object, and the physical gestures required to do so, play a key role in shaping our experience of that object and our future modes of interaction. Studies have concluded that being able to handle and manually interact with an object aids cognition, for example in the case of letting children play with physical letters to learn the alphabet. Research specifically focused on data is still relatively new, although there are a few excellent studies in which scholars have experimented to see if this argument applies to tangible data representations. Is our memory enhanced when multiple senses work on a cognitive task? Can we remember more if data is represented on a 3D physical bar chart that we can see, caress, and touch, rather than a 2D digital bar chart? Can we retrieve information from a data physicalisation more easily than we can from a digital visualisation?\nA journalistic context for data physicalisation\nThe potential journalistic benefits of physical data representations are not limited to how such objects perform in terms of information retrieval and memorability. Physical news installations inherently have some characteristics that make them a great complement to online journalism. For example, they can be used to deliver interactive data journalism in places with limited internet access. They can be designed to be fully accessible for the visually impaired, unlike online data viz. They are also more straightforward to interact with than rich online interactives, and can therefore be used to teach and improve the audience’s data and visual literacies. (Think: Hans Rosling’s Population growth explained with IKEA boxes.)\nFurthermore, physical data installations can have a role in fostering civic engagement, as Attila Bujdosó describes in his 2012 essay, Data embodiment as a strategy for citizen engagement:\n“...public data embodiment objects promise the potential of generating collective experiences in a community, which can strengthen the shared identity among its members and develop a group responsibility for collective issues.”\nThere is even a specific practice of data physicalisation, called ‘Participatory Data Physicalisation’, that explicitly highlights this focus on the collective experience. In such works, the data physicalisation is not an object designed top-down, but rather, in the words of  Matteo Moretti, a “shared experience, where visitors [become] participants: protagonists and recipients of the visualization”.\nParticipatory Data physicalisation @ TED Med 2017 Milan, by Know and belive, the Free University of Bozen-Bolzano, and Matteo Moretti.\nThe fact that a physical data representation does not need to be opened in a browser, but is somehow ‘always there’, means that it can promote an informal and casual experience, which is more inviting to novice and non-expert users. Newsrooms could coordinate with public spaces (like parks, libraries, or museums) to host events and news installations on topics of local relevance, like the local administration’s spending budget or traffic accidents. Such installations would continue to inhabit the place for defined periods of time, offering a constant visual token as people walk by it, perhaps spontaneously engaging with it and debating its message with other members of the community. \nDevelopments in newsroom business models suggest that this path is compatible with what is working in terms of revenue. As newsrooms rely less and less on ads and more on membership models, subscriptions, and donations, there will be more room for experiments in ways to better engage the audience.\nIn parallel, newsrooms are increasingly grounding their practice in the community they work with. According to the Engaged Journalism Accelerator, which promotes similar initiatives, these kinds of journalistic practices have “the potential to restore trust in media, provide citizens with information they need and help establish new and resilient revenue models and enhance plurality and diversity in a crucial part of society’s information ecosystem”. \nLastly, journalism events are becoming more common and are a perfect match for physical data installations. NiemanLab’s research across Western media outlets puts physical journalism, “in the form of public meetings, festivals, events, and stage plays”, among the nine core ideas for innovative journalism. In the USA, The Washington Post, Politico, National Journal, the New York Times, NPR and others are all hosting live journalism events. The Texas Tribune generates almost as much income from events as from corporate gifts, while The Atlantic makes about 20% of its revenue from the roughly 100 live events it organises per year.\nIn short: it seems like a perfect time for newsrooms to experiment with data physicalisation. But where to start? The following section provides a quick primer on how to go from a .CSV or a .GEOJSON file to a 3D tactile map, all while learning the common tools and stages of a data physicalisation process using digital fabrication.\nCrafting physical data objects\nFirst, let’s look at the main steps that will allow you to transform a data file into a 3D map. As an example, we’re going to use data from the website Inside Airbnb, an independent watchdog that collects data to help researchers assess the impact of Airbnb in their city’s housing stock. We’ll focus on two European cities that symbolically sit at the opposite end of the spectrum in terms of regulation: Barcelona and Venice. On one hand, Barcelona can be seen at the frontlines of restricting touristic short-term rentals through a system of licenses and quotas, and via a direct agreement with Airbnb to access hosts’ data. On the other, Venice has very limited regulation, mostly just on tax issues. To compare these approaches, we’re going to visualise  physicalise the number of entire apartment listings in a hexagon grid map. Once you familiarise yourself with this process, it can be repeated for any of the 70+ cities for which you find data on the Inside Airbnb website. \nIn this tutorial, we’re going to design the maps separately, so that they can be presented independently or next to each other like a series of small multiples maps. The design and fabrication of these maps has been developed by Chi ha ucciso il Conte?, an Italian designer and expert in digital fabrication and open source software.\nDigital fabrication\nTo craft our data driven objects, we’re going to use digital fabrication techniques. Digital fabrication is a manufacturing process that uses the numerical values generated by computer software as coordinates to control machines and create objects with an accuracy that would be hardly achievable by a human being. Typical machines are 3D printers and CNC milling machines.\nNot all data physicalisations are made through these kinds of semi-automated processes. For example, you could represent data through existing physical objects, or you could hand-craft data objects even out of Play Doh, Lego, or even by knitting. However, digital fabrication technologies have a series of advantages that make them a good match for our project:\nthey allow for rapid manufacturing of the desired outputs\ntheir high level of accuracy makes them perfect to work with data\nthe same design file can be repeatedly used to create reliable and consistent outputs anywhere in the world, meaning that an unlimited number of news organisations (or local units of the same news organisations) could manufacture an identical output locally, using the original design file.\nA typical digital fabrication workflow starts right after the designer has clearly established the look, structure, and functioning of the desired output on pen and paper, including the definition of more technical characteristics like the dimensions of all its various parts.\nAn example of a digital fabrication workflow.\nThe first component of a typical digital fabrication workflow is to transform these sketches and drawings into a digital, mathematical, and 3D model of all the components that need to be produced for the final output. This phase could encompass things like:  \nbinding the data points and spreadsheet into visual elements such as the lines, curves, lengths, and widths of the physical object that will go into production\nmodeling the physical components needed to host sensors or motors to record and animate the data\nbuilding physical boards with engraved information about the data, axis ticks, labels, annotations, titles, and so on.\nOnce the 3D modeling phase is complete, this visual and human-friendly design needs to be converted into a file with machine-readable instructions, so that a manufacturing machine can accurately and reliably craft the designed objects. This procedure is called G-Code generation. The G-Code file is the one that eventually gets imported into the machine.\nThe workflow\nNow to what happens at each stage of the data physicalisation process. We’ll just be covering high-level instructions, focused on the input/output of each phase and what each intermediary step should be, rather than detail of each software’s interface or how to practically execute the commands (although we will provide links on where to find additional resources for each). If you have specific questions, feel free to contact the author. \nFor this example, we will only use a 3D printer, as it is the most approachable of the possible machines to build a 3D hexagonal grid map, along with entirely open source software: \nQGIS for the data preparation\nFreeCAD and Blender for 3D modeling\nSlic3r for generating the GCode.\nOur workflow will show you how to create a single map for the city of Barcelona. Creating the second map for the city of Venice (or any other city) will require the same steps, just with different input data. I have imported all of the output files mentioned at the different stages into this GitHub repo. Feel free to download them and use them for reference, or to directly print your own versions of these two maps, skipping the preparation and modeling phase.\n1. Prepare the data\nSoftware: QGIS\nInput: Two files downloaded from the Inside Airbnb website: the ‘neighbourhood.geojson’ file and the ‘listings.csv’ file for the city of Barcelona.\nOutput: Two files for each city:\nOne .SVG file with the outer boundaries of Barcelona. We’ll call it ‘barcelona-boundaries.svg’.\nOne .SHP file with a hexagonal grid vector layer, containing the number of entire apartments in each hexagonal area. There should be a minimal buffer between the hexagons, and the grid should include only areas with one or more apartment. We’ll call it ‘barcelona-airbnb.shp’.\nTo create the .SVG file:\nOpen QGIS and import the ‘neighbourhood.geojson’ file.\nApply the dissolve command on the layer to delete all inner boundaries dividing the different neighbourhoods, resulting in a vector layer containing only the outer boundaries of the city.\nUse QGIS’s print composer to export the .SVG of this simplified layer. Let’s call this file ‘barcelona-boundaries.svg’.\nTo create the .SHP file:\nImport the ‘listings.csv’ file in QGIS.\nFilter the ‘listings’ to include only entire apartments.\nCreate a regular grid vector layer of 500x500m hexagons. \nClip the hexagon grid with the dissolved neighbourhood layer.\nCount the number of points in the filtered listings layer belonging to each hexagon of the grid.\nAdd a minimal negative buffer (-0.01 meters) to make sure the hexagons of the grid don’t touch each other. This is important because the 3D modeling software you will use needs to work with distinct solids without any overlapping lines,  and in the default hexagonal grid created by QGIS, the polygons overlap. Giving the buffer zone a very minimal number removes any overlapping while creating a gap that is essentially imperceptible to the eye.\nFilter the buffered layer so that it includes only hexagons for areas with at least one entire apartment within it.\nExport the layer as a .SHP file, with the CRS set to either WGS84 or Web Mercator. Let’s call this file ‘barcelona-airbnb.shp’.\n2.a. Create a 3D model for base of the 3D map\nSoftware: FreeCAD\nInput: The .SVG file created in the previous phase, ‘barcelona-boundaries.svg’.\nOutput: Two .STL files, one containing a square base; another with extruded 3D boundaries of the city. We’ll call them ‘barcelona-base.stl’ and ‘barcelona-city-map.stl’. They will be used for reference in the next step.\nTo create the .STL files:\nOpen FreeCAD.\nDraw a 20x20cm square. This will serve as a reference point for how big the map should be. The size can depend on the printer you have access to: the bigger the building plate, the bigger you can make the map and its base.\nExtrude the square by 5mm.\nExport this extruded object as a .STL mesh (called ‘barcelona-base.stl’).\nImport the .SVG with the city’s outer boundaries on FreeCAD.\nExtrude the .SVG by 2mm.\nExport this extruded object as a .STL mesh (let’s call it ‘barcelona-city-map.stl’).\n2.b. Create a 3D model of the hexagonal grid map layer\nSoftware: Blender and the Blender GIS Add-on\nInput: The .STL file with the city map created in the previous step and the .SHP file created in the first phase, for both cities. So: ‘barcelona-city-map.stl’ and ‘barcelona-airbnb.shp’.\nOutput: A .STL file containing a 3D model of the hexagonal maps, with the height of each hexagon defined by the number of entire apartment listings in that area. We’ll call it ‘barcelona-airbnb3d.stl’.\nTo create the .STL file:\nOpen Blender.\nImport first the .STL file with the city map.\nImport the .SHP file with the hexagonal grid and the data on entire apartments. You will see this option only if you have installed the Blender GIS Add-on.\nIn the import options, before clicking ‘OK’, make sure that you specify the following parameters:\nExtrusion from fields: tick the check box\nField: choose the field that contains the number of apartments\nExtrude along: choose ‘Z axis’\nCRS: specify the correct CRS.\nThe imported .SHP file is probably very big: resize it so that it snaps into the city boundaries of the city map .STL file.\nPerform a boolean union operation to unite the base city map to the 3D hexagons into a single solid.\nExport the solid as an .STL file. Let’s call the file ‘barcelona-airbnb3d.stl’.\n3. Create the GCode for the 3D printed hexagonal grid map layer\nSoftware: Slic3r \nSlic3r is a ‘slicer’ --  a software that processes the 3D model and generated instructions for the 3D printer, for example by slicing the volume into thin layers, creating supports for hanging elements, and so on. The version of Slic3r used in this tutorial is a custom version tailored to the 3D printer used, a Prusa i3 mk3, but you will find the same commands in any Slic3r version. If you are using a general version of Slic3r, then you will need to set the configurations appropriately for your specific 3D printer. It’s wise to talk to the owner/operator of the 3D printer in this phase.\nInput: The .STL file containing the 3D model of the hexagonal maps, so ‘barcelona-airbnb3d.stl’.\nOutput: A .GCODE file that can be sent to the 3D printer. We’ll call it ‘barcelona-airbnb-3dprint.gcode’.\nTo create the .GCODE  file:\nOpen Slic3r.\nAdd the .STL file with the 3D hexagonal grid map, ‘barcelona-airbnb3d.stl’.\nCheck if the print settings are correct (the default ones usually work fine) and slice the model.\nExport a .GCODE file of the sliced object. Let’s call it ‘barcelona-airbnb-3dprint.gcode’.\n4. 3D printing the map\nHardware: Prusa i3, or other 3D printer\nFor this part of the project, it is advisable to first contact the person who will be operating the machine to produce your output. This because every machine has its own specs, capabilities, and possibly even software.\nInput: the .GCODE file with the instructions for the 3D printer.\nOutput: a physical map of Airbnb entire apartments distribution in Barcelona.\nTo 3D print the map:\nCopy the .GCode file (‘barcelona-airbnb-3dprint.gcode’) onto an SD card/USB drive depending on what your 3D printer reads.\nInsert the SD card into the 3D printer.\nPrepare the PLA filament and insert the spool in its lodging, if it is not already in place.\nInsert the lead of the filament into the hole on top of the extruder.\nPreheat the extruder and the building plate.\nWhen the extruder and the building plate reach the temperature, load the filament. Check that it flows down smoothly, otherwise repeat steps 5-6 again.\nSelect the .GCode file and print it. For reference, consider that it should take approximately 1 hour and a half to complete. You don’t need to sit next to your 3D printer the whole time, but it might be useful to check on the process every once in a while. \nWhen the piece is completely printed, delicately remove it from the building plate. The piece might be attached quite firmly, so you might need a spatula to aid you in the operation. \nUse some pliers to clean up the object by removing extra filament traces around the edges.\nPLA plastic is very easy to recycle: make sure you discard the scraps and waste appropriately, for example by bringing it to a PLA filament recycling facility or at least by throwing it away in a plastic recycling bin.\n5. Assemble\nYou can layout your 3D maps on a wooden support, eventually adding contextual information like titles and a 3D legend. You could write them in pen, paint them, or even try to 3D print them like we did. You can repeat this process to portray multiple cities.\nIn these tactile maps, data patterns are communicated through multiple senses, and both sight and touch work together to show how the two cities have similarities in terms of geographical distribution -- Airbnb listings are concentrated in the central areas -- and stark differences in terms of scale.\nThe center of Venice has a concentration of up to 444 listings inside the area of a single 500x500m hexagon, while in Barcelona this maximum number is halved at only 207 listings. This disproportion is even more significant if we consider the population of the two cities: Venice is home to roughly 270,000 people (of which only 52,000 live in the central ‘fish’ that hosts the majority of Airbnb listings), while Barcelona is home to 1.7 million.\nThese types of tactile maps are a very basic data physicalisation type that can even be produced by beginners. At the same time, they are a novel and powerful way to present data beyond purely visuals cues, allowing people to interact with your data and retrieve information from it in a physical setting.\nConclusion\nAs software and hardware progress, the technical barriers to making data physicalisation will lower, as it did for data visualisations. But, technology aside, data physicalisation is first of all a process that begins in the mind, by thinking creatively about what can be used to encode data beyond the visual and what types of experiences you want to foster in your community. And for this, you don’t need complex technical skills, it is first of all about imagination. So, I’ll leave you with this question: What data physicalisation do you imagine for your next story?","guid":"https://datajournalism.com/read/longreads/lets-get-physical-how-to-represent-data-through-touch","isoDate":"2019-07-15T22:30:00.000Z","blogTitle":"DataJournalism.com"}},"__N_SSG":true}